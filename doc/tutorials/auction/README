The auction example is a VERY simple on-line auction simulation.

The auction-ddl.sql file describes the following tables:

- Category (types of things that can be auctioned)
- Item (actual things that are auctioned) - User (buyers and sellers)
- Auction (one record per auction, including a start time equal to the
  creation time of the record and an end time 2 minutes later)
- Bid (all of the bids for all of the auctions)

A client is provided that runs various Java stored procedure files to:

- Load categories, users, and items from the category,txt, user.txt, and
  item.txt datafiles into the appropriate tables.
- Load 4 auctions from the auctions.txt file into the auction table and
  initiate the auctions.
- Provide bids by various users for each auction, using an algorithm for
  creating a new bid price based on the previous bid for the item adjusted
  by an increase based on the starting price and a random Gaussian
  function. Each auction completes within 1 to 2 minutes after the auction
  starts.
- Provide periodic status on each auction. - Provide the results
  of each auction after close.

Export ------

The auction example is also set up to demonstrate the
ability for VoltDB to export live data from a running database. To run
the auction example with export enabled, you must do the following:

1. Edit deployment.xml and change enabled="false" to enabled="true" in
   the <export> tag.

2. Start two terminal windows in the auction directory.

3. In the first terminal window, issue the "run.sh catalog" command to compile
   the Java source code and build the VoltDB application catalog jar for
   the aution example.

4. In the first terminal window, issue the "run.sh server" command to start
   the auction database server.

5. In the second terminal window, issue the "run.sh client" command to start
   the auction client application.

When you perform these actions, the auction client will run as usual. At
the same time, the on-server export-to-file feature will write all of the BID and ITEM
records to comma-separated files in the default directory.  The file rolling period
is set to 5 minutes, so files beginning with 'active-MyExport' which are where the server
is currently writing export data will be moved to files that just start with 'MyExport'
after 5 minutes and new active files will be created.

When the auction example finishes running CTRL-C in the server window
and the server processes will stop.
