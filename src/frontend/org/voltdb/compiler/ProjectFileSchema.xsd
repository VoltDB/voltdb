<?xml version="1.0" encoding="UTF-8"?>

<!--

    WORTH READING:

    This schema describes the Volt project file,
    project.xml. VoltCompiler processes project.xml file using
    the jaxb XML to Java bindings.

    If you modify this schema, the jaxb bindings must be regenerated.
    It is normally handled by the ant build.

    It's also easy to do manually:

    cd src/frontend
    xjc -p org.voltdb.compiler.projectfile org/voltdb/compiler/ProjectFileSchema.xsd

    Binding objects are created in the org.voltdb.compiler.projectfile
    package. These generated files are checked in to svn.

    You can check that changes to this file produce a valid schema using
    the public tool at http://www.w3.org/2001/03/webdata/xsv.

    For more information about jaxb, see:
    http://java.sun.com/developer/technicalArticles/WebServices/jaxb/

  -->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            elementFormDefault="unqualified">

  <!--  <project> -->
  <xsd:element name="project" type="projectType"/>
  <xsd:complexType name="projectType">
    <xsd:all>
      <xsd:element name="info" minOccurs='0' maxOccurs='1' type="infoType"/>
      <xsd:element name="database" minOccurs="1" maxOccurs="1" type="databaseType"/>
    </xsd:all>
  </xsd:complexType>

  <!-- <info> -->
  <xsd:complexType name="infoType">
    <xsd:all>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="version" type="xsd:string"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="catalog" minOccurs='0' maxOccurs='1' type="xsd:string"/>
      <xsd:element name="classpath" minOccurs='0' maxOccurs='1' type="xsd:string"/>
    </xsd:all>
  </xsd:complexType>

  <!--  <database> -->
  <xsd:complexType name="databaseType">
    <xsd:all>
      <!-- elements of an all group may appear in any order at most once. -->
      <xsd:element name="groups" type="groupsType" minOccurs="0"/>
      <xsd:element name="roles" type="rolesType" minOccurs="0"/>
      <xsd:element name="schemas" type="schemasType"/>
      <xsd:element name="procedures" type="proceduresType" minOccurs="0"/>
      <xsd:element name="partitions" type="partitionsType" minOccurs="0"/>
      <xsd:element name="classdependencies" type="classdependenciesType" minOccurs="0"/>
      <xsd:element name="export" type="exportType" minOccurs="0"/>
    </xsd:all>
    <xsd:attribute name="name" type="xsd:string" use="optional" default="database"/>
  </xsd:complexType>

  <!-- <groups> -->
  <xsd:complexType name="groupsType">
    <xsd:sequence>
      <xsd:element name="group" minOccurs="1" maxOccurs="unbounded">
        <xsd:complexType>
          <xsd:attribute name="name" type="xsd:string" use="required"/>
          <xsd:attribute name="sysproc" type="xsd:boolean" default="false"/>
          <xsd:attribute name="defaultproc" type="xsd:boolean" default="false"/>
          <xsd:attribute name="adhoc" type="xsd:boolean" default="false"/>
          <xsd:attribute name="defaultprocread" type="xsd:boolean" default="false"/>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <!-- <roles> -->
  <xsd:complexType name="rolesType">
    <xsd:sequence>
      <xsd:element name="role" minOccurs="1" maxOccurs="unbounded">
        <xsd:complexType>
          <xsd:attribute name="name" type="xsd:string" use="required"/>
          <xsd:attribute name="sysproc" type="xsd:boolean" default="false"/>
          <xsd:attribute name="defaultproc" type="xsd:boolean" default="false"/>
          <xsd:attribute name="adhoc" type="xsd:boolean" default="false"/>
          <xsd:attribute name="defaultprocread" type="xsd:boolean" default="false"/>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

    <!-- <schemas> -->
  <xsd:complexType name="schemasType">
    <xsd:sequence>
      <xsd:element name="schema" minOccurs="1" maxOccurs="unbounded">
        <xsd:complexType>
          <xsd:attribute name="path" type="xsd:string" use="required"/>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <!-- <procedures> -->
  <xsd:complexType name="proceduresType">
    <xsd:sequence>
      <xsd:element name="procedure" minOccurs="0" maxOccurs="unbounded">
        <xsd:complexType>
          <!-- a "statement procedure" specifies a single sql statement -->
          <xsd:sequence>
              <xsd:element name="sql" minOccurs="0" maxOccurs="1">
                  <xsd:complexType>
                      <xsd:simpleContent>
                          <xsd:extension base="xsd:string">
                              <xsd:attribute name="joinorder" type="xsd:string" use="optional"/>
                          </xsd:extension>
                      </xsd:simpleContent>
                   </xsd:complexType>
              </xsd:element>
          </xsd:sequence>
          <xsd:attribute name="class" type="xsd:string" use="required"/>
          <xsd:attribute name="partitioninfo" type="xsd:string"/>
          <xsd:attribute name="groups" type="xsd:string"/>
          <xsd:attribute name="roles" type="xsd:string"/>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <!-- <partitions> -->
  <xsd:complexType name="partitionsType">
    <xsd:sequence>
      <xsd:element name="partition" minOccurs="1" maxOccurs="unbounded">
        <xsd:complexType>
          <xsd:attribute name="table" type="xsd:string" use="required"/>
          <xsd:attribute name="column" type="xsd:string" use="required"/>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <!-- <classdependencies> -->
  <xsd:complexType name="classdependenciesType">
    <xsd:sequence>
      <xsd:element name="classdependency" minOccurs="0" maxOccurs="unbounded">
        <xsd:complexType>
          <xsd:attribute name="class" type="xsd:string" use="required"/>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <!-- <exports> -->
  <xsd:complexType name="exportType">
    <xsd:all>
      <!-- <tables> -->
      <xsd:element name="tables" minOccurs="0" maxOccurs="1">
        <xsd:complexType>
          <xsd:sequence>
            <!-- <table> -->
            <xsd:element name="table" minOccurs="0" maxOccurs="unbounded">
              <xsd:complexType>
                <xsd:attribute name="name" type="xsd:string" use="required"/>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:all>
  </xsd:complexType>

</xsd:schema>
