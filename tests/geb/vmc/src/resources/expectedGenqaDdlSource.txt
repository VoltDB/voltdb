# Expected DDL Source: (when running the Genqa test app)
CREATE STREAM EXPORT_DONE_TABLE PARTITION ON COLUMN TXNID (
   TXNID bigint NOT NULL
);

CREATE TABLE EXPORT_MIRROR_PARTITIONED_TABLE (
   TXNID bigint NOT NULL,
   ROWID bigint NOT NULL,
   ROWID_GROUP tinyint NOT NULL,
   TYPE_NULL_TINYINT tinyint,
   TYPE_NOT_NULL_TINYINT tinyint NOT NULL,
   TYPE_NULL_SMALLINT smallint,
   TYPE_NOT_NULL_SMALLINT smallint NOT NULL,
   TYPE_NULL_INTEGER integer,
   TYPE_NOT_NULL_INTEGER integer NOT NULL,
   TYPE_NULL_BIGINT bigint,
   TYPE_NOT_NULL_BIGINT bigint NOT NULL,
   TYPE_NULL_TIMESTAMP timestamp,
   TYPE_NOT_NULL_TIMESTAMP timestamp NOT NULL,
   TYPE_NULL_DECIMAL decimal,
   TYPE_NOT_NULL_DECIMAL decimal NOT NULL,
   TYPE_NULL_FLOAT float,
   TYPE_NOT_NULL_FLOAT float NOT NULL,
   TYPE_NULL_VARCHAR25 varchar(32),
   TYPE_NOT_NULL_VARCHAR25 varchar(32) NOT NULL,
   TYPE_NULL_VARCHAR128 varchar(128),
   TYPE_NOT_NULL_VARCHAR128 varchar(128) NOT NULL,
   TYPE_NULL_VARCHAR1024 varchar(1024),
   TYPE_NOT_NULL_VARCHAR1024 varchar(1024) NOT NULL,
   PRIMARY KEY (ROWID)
);
PARTITION TABLE EXPORT_MIRROR_PARTITIONED_TABLE ON COLUMN ROWID;

CREATE STREAM EXPORT_PARTITIONED_TABLE PARTITION ON COLUMN ROWID (
   TXNID bigint NOT NULL,
   ROWID bigint NOT NULL,
   ROWID_GROUP tinyint NOT NULL,
   TYPE_NULL_TINYINT tinyint,
   TYPE_NOT_NULL_TINYINT tinyint NOT NULL,
   TYPE_NULL_SMALLINT smallint,
   TYPE_NOT_NULL_SMALLINT smallint NOT NULL,
   TYPE_NULL_INTEGER integer,
   TYPE_NOT_NULL_INTEGER integer NOT NULL,
   TYPE_NULL_BIGINT bigint,
   TYPE_NOT_NULL_BIGINT bigint NOT NULL,
   TYPE_NULL_TIMESTAMP timestamp,
   TYPE_NOT_NULL_TIMESTAMP timestamp NOT NULL,
   TYPE_NULL_DECIMAL decimal,
   TYPE_NOT_NULL_DECIMAL decimal NOT NULL,
   TYPE_NULL_FLOAT float,
   TYPE_NOT_NULL_FLOAT float NOT NULL,
   TYPE_NULL_VARCHAR25 varchar(32),
   TYPE_NOT_NULL_VARCHAR25 varchar(32) NOT NULL,
   TYPE_NULL_VARCHAR128 varchar(128),
   TYPE_NOT_NULL_VARCHAR128 varchar(128) NOT NULL,
   TYPE_NULL_VARCHAR1024 varchar(1024),
   TYPE_NOT_NULL_VARCHAR1024 varchar(1024) NOT NULL
);

CREATE STREAM EXPORT_REPLICATED_TABLE (
   TXNID bigint NOT NULL,
   ROWID bigint NOT NULL,
   ROWID_GROUP tinyint NOT NULL,
   TYPE_NULL_TINYINT tinyint,
   TYPE_NOT_NULL_TINYINT tinyint NOT NULL,
   TYPE_NULL_SMALLINT smallint,
   TYPE_NOT_NULL_SMALLINT smallint NOT NULL,
   TYPE_NULL_INTEGER integer,
   TYPE_NOT_NULL_INTEGER integer NOT NULL,
   TYPE_NULL_BIGINT bigint,
   TYPE_NOT_NULL_BIGINT bigint NOT NULL,
   TYPE_NULL_TIMESTAMP timestamp,
   TYPE_NOT_NULL_TIMESTAMP timestamp NOT NULL,
   TYPE_NULL_FLOAT float,
   TYPE_NOT_NULL_FLOAT float NOT NULL,
   TYPE_NULL_DECIMAL decimal,
   TYPE_NOT_NULL_DECIMAL decimal NOT NULL,
   TYPE_NULL_VARCHAR25 varchar(32),
   TYPE_NOT_NULL_VARCHAR25 varchar(32) NOT NULL,
   TYPE_NULL_VARCHAR128 varchar(128),
   TYPE_NOT_NULL_VARCHAR128 varchar(128) NOT NULL,
   TYPE_NULL_VARCHAR1024 varchar(1024),
   TYPE_NOT_NULL_VARCHAR1024 varchar(1024) NOT NULL
);

CREATE STREAM EXPORT_SKINNY_PARTITIONED_TABLE PARTITION ON COLUMN ROWID (
   TXNID bigint NOT NULL,
   ROWID bigint NOT NULL
);

CREATE TABLE PARTITIONED_TABLE (
   ROWID bigint NOT NULL,
   ROWID_GROUP tinyint NOT NULL,
   TYPE_NULL_TINYINT tinyint,
   TYPE_NOT_NULL_TINYINT tinyint NOT NULL,
   TYPE_NULL_SMALLINT smallint,
   TYPE_NOT_NULL_SMALLINT smallint NOT NULL,
   TYPE_NULL_INTEGER integer,
   TYPE_NOT_NULL_INTEGER integer NOT NULL,
   TYPE_NULL_BIGINT bigint,
   TYPE_NOT_NULL_BIGINT bigint NOT NULL,
   TYPE_NULL_TIMESTAMP timestamp,
   TYPE_NOT_NULL_TIMESTAMP timestamp NOT NULL,
   TYPE_NULL_FLOAT float,
   TYPE_NOT_NULL_FLOAT float NOT NULL,
   TYPE_NULL_DECIMAL decimal,
   TYPE_NOT_NULL_DECIMAL decimal NOT NULL,
   TYPE_NULL_VARCHAR25 varchar(32),
   TYPE_NOT_NULL_VARCHAR25 varchar(32) NOT NULL,
   TYPE_NULL_VARCHAR128 varchar(128),
   TYPE_NOT_NULL_VARCHAR128 varchar(128) NOT NULL,
   TYPE_NULL_VARCHAR1024 varchar(1024),
   TYPE_NOT_NULL_VARCHAR1024 varchar(1024) NOT NULL,
   PRIMARY KEY (ROWID)
);
PARTITION TABLE PARTITIONED_TABLE ON COLUMN ROWID;
CREATE INDEX IX_PARTITIONED_TABLE_ROWID_GROUP ON PARTITIONED_TABLE (ROWID_GROUP);

CREATE TABLE REPLICATED_TABLE (
   ROWID bigint NOT NULL,
   ROWID_GROUP tinyint NOT NULL,
   TYPE_NULL_TINYINT tinyint,
   TYPE_NOT_NULL_TINYINT tinyint NOT NULL,
   TYPE_NULL_SMALLINT smallint,
   TYPE_NOT_NULL_SMALLINT smallint NOT NULL,
   TYPE_NULL_INTEGER integer,
   TYPE_NOT_NULL_INTEGER integer NOT NULL,
   TYPE_NULL_BIGINT bigint,
   TYPE_NOT_NULL_BIGINT bigint NOT NULL,
   TYPE_NULL_TIMESTAMP timestamp,
   TYPE_NOT_NULL_TIMESTAMP timestamp NOT NULL,
   TYPE_NULL_FLOAT float,
   TYPE_NOT_NULL_FLOAT float NOT NULL,
   TYPE_NULL_DECIMAL decimal,
   TYPE_NOT_NULL_DECIMAL decimal NOT NULL,
   TYPE_NULL_VARCHAR25 varchar(32),
   TYPE_NOT_NULL_VARCHAR25 varchar(32) NOT NULL,
   TYPE_NULL_VARCHAR128 varchar(128),
   TYPE_NOT_NULL_VARCHAR128 varchar(128) NOT NULL,
   TYPE_NULL_VARCHAR1024 varchar(1024),
   TYPE_NOT_NULL_VARCHAR1024 varchar(1024) NOT NULL,
   PRIMARY KEY (ROWID)
);
CREATE INDEX IX_REPLICATED_TABLE_ROWID_GROUP ON REPLICATED_TABLE (ROWID_GROUP);

CREATE VIEW PARTITIONED_TABLE_GROUP (
   ROWID_GROUP,
   RECORD_COUNT
) AS 
   SELECT ROWID_GROUP,COUNT(*)FROM PARTITIONED_TABLE GROUP BY ROWID_GROUP;

CREATE VIEW REPLICATED_TABLE_GROUP (
   ROWID_GROUP,
   RECORD_COUNT
) AS 
   SELECT ROWID_GROUP,COUNT(*)FROM REPLICATED_TABLE GROUP BY ROWID_GROUP;


CREATE PROCEDURE --Annotated Partitioning Takes Precedence Over DDL Procedure Partitioning Statement
--   PARTITION ON TABLE EXPORT_DONE_TABLE COLUMN TXNID
   FROM CLASS genqa.procedures.JiggleExportDoneTable;

CREATE PROCEDURE 
   FROM CLASS genqa.procedures.JiggleExportMultiPartition;

CREATE PROCEDURE --Annotated Partitioning Takes Precedence Over DDL Procedure Partitioning Statement
--   PARTITION ON TABLE EXPORT_PARTITIONED_TABLE COLUMN ROWID
   FROM CLASS genqa.procedures.JiggleExportSinglePartition;

CREATE PROCEDURE 
   FROM CLASS genqa.procedures.JiggleMultiPartition;

CREATE PROCEDURE 
   FROM CLASS genqa.procedures.JiggleMultiPartitionWithDeletionExport;

CREATE PROCEDURE --Annotated Partitioning Takes Precedence Over DDL Procedure Partitioning Statement
--   PARTITION ON TABLE PARTITIONED_TABLE COLUMN ROWID
   FROM CLASS genqa.procedures.JiggleSinglePartition;

CREATE PROCEDURE --Annotated Partitioning Takes Precedence Over DDL Procedure Partitioning Statement
--   PARTITION ON TABLE PARTITIONED_TABLE COLUMN ROWID
   FROM CLASS genqa.procedures.JiggleSinglePartitionWithDeletionExport;

CREATE PROCEDURE 
   PARTITION ON TABLE EXPORT_SKINNY_PARTITIONED_TABLE COLUMN ROWID
   FROM CLASS genqa.procedures.JiggleSkinnyExportSinglePartition;

CREATE PROCEDURE 
   FROM CLASS genqa.procedures.WaitMultiPartition;

CREATE PROCEDURE --Annotated Partitioning Takes Precedence Over DDL Procedure Partitioning Statement
--   PARTITION ON TABLE PARTITIONED_TABLE COLUMN ROWID
   FROM CLASS genqa.procedures.WaitSinglePartition;
