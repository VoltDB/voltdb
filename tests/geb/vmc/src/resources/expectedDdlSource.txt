# Expected DDL Source: (when running the default GEB VMC
# test server; see ../../server/run_voltdb_server.sh)

CREATE TABLE EXPORT_DONE_TABLE (
   TXNID bigint NOT NULL
);
PARTITION TABLE EXPORT_DONE_TABLE ON COLUMN TXNID;
EXPORT TABLE EXPORT_DONE_TABLE;

CREATE TABLE EXPORT_MIRROR_PARTITIONED_TABLE (
   TXNID bigint NOT NULL,
   ROWID bigint NOT NULL,
   ROWID_GROUP tinyint NOT NULL,
   TYPE_NULL_TINYINT tinyint,
   TYPE_NOT_NULL_TINYINT tinyint NOT NULL,
   TYPE_NULL_SMALLINT smallint,
   TYPE_NOT_NULL_SMALLINT smallint NOT NULL,
   TYPE_NULL_INTEGER integer,
   TYPE_NOT_NULL_INTEGER integer NOT NULL,
   TYPE_NULL_BIGINT bigint,
   TYPE_NOT_NULL_BIGINT bigint NOT NULL,
   TYPE_NULL_TIMESTAMP timestamp,
   TYPE_NOT_NULL_TIMESTAMP timestamp NOT NULL,
   TYPE_NULL_DECIMAL decimal,
   TYPE_NOT_NULL_DECIMAL decimal NOT NULL,
   TYPE_NULL_FLOAT float,
   TYPE_NOT_NULL_FLOAT float NOT NULL,
   TYPE_NULL_VARCHAR25 varchar(32),
   TYPE_NOT_NULL_VARCHAR25 varchar(32) NOT NULL,
   TYPE_NULL_VARCHAR128 varchar(128),
   TYPE_NOT_NULL_VARCHAR128 varchar(128) NOT NULL,
   TYPE_NULL_VARCHAR1024 varchar(1024),
   TYPE_NOT_NULL_VARCHAR1024 varchar(1024) NOT NULL,
   PRIMARY KEY (ROWID)
);
PARTITION TABLE EXPORT_MIRROR_PARTITIONED_TABLE ON COLUMN ROWID;

CREATE TABLE EXPORT_PARTITIONED_TABLE (
   TXNID bigint NOT NULL,
   ROWID bigint NOT NULL,
   ROWID_GROUP tinyint NOT NULL,
   TYPE_NULL_TINYINT tinyint,
   TYPE_NOT_NULL_TINYINT tinyint NOT NULL,
   TYPE_NULL_SMALLINT smallint,
   TYPE_NOT_NULL_SMALLINT smallint NOT NULL,
   TYPE_NULL_INTEGER integer,
   TYPE_NOT_NULL_INTEGER integer NOT NULL,
   TYPE_NULL_BIGINT bigint,
   TYPE_NOT_NULL_BIGINT bigint NOT NULL,
   TYPE_NULL_TIMESTAMP timestamp,
   TYPE_NOT_NULL_TIMESTAMP timestamp NOT NULL,
   TYPE_NULL_DECIMAL decimal,
   TYPE_NOT_NULL_DECIMAL decimal NOT NULL,
   TYPE_NULL_FLOAT float,
   TYPE_NOT_NULL_FLOAT float NOT NULL,
   TYPE_NULL_VARCHAR25 varchar(32),
   TYPE_NOT_NULL_VARCHAR25 varchar(32) NOT NULL,
   TYPE_NULL_VARCHAR128 varchar(128),
   TYPE_NOT_NULL_VARCHAR128 varchar(128) NOT NULL,
   TYPE_NULL_VARCHAR1024 varchar(1024),
   TYPE_NOT_NULL_VARCHAR1024 varchar(1024) NOT NULL
);
PARTITION TABLE EXPORT_PARTITIONED_TABLE ON COLUMN ROWID;
EXPORT TABLE EXPORT_PARTITIONED_TABLE;

CREATE TABLE EXPORT_REPLICATED_TABLE (
   TXNID bigint NOT NULL,
   ROWID bigint NOT NULL,
   ROWID_GROUP tinyint NOT NULL,
   TYPE_NULL_TINYINT tinyint,
   TYPE_NOT_NULL_TINYINT tinyint NOT NULL,
   TYPE_NULL_SMALLINT smallint,
   TYPE_NOT_NULL_SMALLINT smallint NOT NULL,
   TYPE_NULL_INTEGER integer,
   TYPE_NOT_NULL_INTEGER integer NOT NULL,
   TYPE_NULL_BIGINT bigint,
   TYPE_NOT_NULL_BIGINT bigint NOT NULL,
   TYPE_NULL_TIMESTAMP timestamp,
   TYPE_NOT_NULL_TIMESTAMP timestamp NOT NULL,
   TYPE_NULL_FLOAT float,
   TYPE_NOT_NULL_FLOAT float NOT NULL,
   TYPE_NULL_DECIMAL decimal,
   TYPE_NOT_NULL_DECIMAL decimal NOT NULL,
   TYPE_NULL_VARCHAR25 varchar(32),
   TYPE_NOT_NULL_VARCHAR25 varchar(32) NOT NULL,
   TYPE_NULL_VARCHAR128 varchar(128),
   TYPE_NOT_NULL_VARCHAR128 varchar(128) NOT NULL,
   TYPE_NULL_VARCHAR1024 varchar(1024),
   TYPE_NOT_NULL_VARCHAR1024 varchar(1024) NOT NULL
);
EXPORT TABLE EXPORT_REPLICATED_TABLE;

CREATE TABLE EXPORT_SKINNY_PARTITIONED_TABLE (
   TXNID bigint NOT NULL,
   ROWID bigint NOT NULL
);
PARTITION TABLE EXPORT_SKINNY_PARTITIONED_TABLE ON COLUMN ROWID;
EXPORT TABLE EXPORT_SKINNY_PARTITIONED_TABLE;

CREATE TABLE PARTITIONED_TABLE (
   ROWID bigint NOT NULL,
   ROWID_GROUP tinyint NOT NULL,
   TYPE_NULL_TINYINT tinyint,
   TYPE_NOT_NULL_TINYINT tinyint NOT NULL,
   TYPE_NULL_SMALLINT smallint,
   TYPE_NOT_NULL_SMALLINT smallint NOT NULL,
   TYPE_NULL_INTEGER integer,
   TYPE_NOT_NULL_INTEGER integer NOT NULL,
   TYPE_NULL_BIGINT bigint,
   TYPE_NOT_NULL_BIGINT bigint NOT NULL,
   TYPE_NULL_TIMESTAMP timestamp,
   TYPE_NOT_NULL_TIMESTAMP timestamp NOT NULL,
   TYPE_NULL_FLOAT float,
   TYPE_NOT_NULL_FLOAT float NOT NULL,
   TYPE_NULL_DECIMAL decimal,
   TYPE_NOT_NULL_DECIMAL decimal NOT NULL,
   TYPE_NULL_VARCHAR25 varchar(32),
   TYPE_NOT_NULL_VARCHAR25 varchar(32) NOT NULL,
   TYPE_NULL_VARCHAR128 varchar(128),
   TYPE_NOT_NULL_VARCHAR128 varchar(128) NOT NULL,
   TYPE_NULL_VARCHAR1024 varchar(1024),
   TYPE_NOT_NULL_VARCHAR1024 varchar(1024) NOT NULL,
   PRIMARY KEY (ROWID)
);
PARTITION TABLE PARTITIONED_TABLE ON COLUMN ROWID;
CREATE INDEX IX_PARTITIONED_TABLE_ROWID_GROUP ON PARTITIONED_TABLE (ROWID_GROUP);

CREATE TABLE REPLICATED_TABLE (
   ROWID bigint NOT NULL,
   ROWID_GROUP tinyint NOT NULL,
   TYPE_NULL_TINYINT tinyint,
   TYPE_NOT_NULL_TINYINT tinyint NOT NULL,
   TYPE_NULL_SMALLINT smallint,
   TYPE_NOT_NULL_SMALLINT smallint NOT NULL,
   TYPE_NULL_INTEGER integer,
   TYPE_NOT_NULL_INTEGER integer NOT NULL,
   TYPE_NULL_BIGINT bigint,
   TYPE_NOT_NULL_BIGINT bigint NOT NULL,
   TYPE_NULL_TIMESTAMP timestamp,
   TYPE_NOT_NULL_TIMESTAMP timestamp NOT NULL,
   TYPE_NULL_FLOAT float,
   TYPE_NOT_NULL_FLOAT float NOT NULL,
   TYPE_NULL_DECIMAL decimal,
   TYPE_NOT_NULL_DECIMAL decimal NOT NULL,
   TYPE_NULL_VARCHAR25 varchar(32),
   TYPE_NOT_NULL_VARCHAR25 varchar(32) NOT NULL,
   TYPE_NULL_VARCHAR128 varchar(128),
   TYPE_NOT_NULL_VARCHAR128 varchar(128) NOT NULL,
   TYPE_NULL_VARCHAR1024 varchar(1024),
   TYPE_NOT_NULL_VARCHAR1024 varchar(1024) NOT NULL,
   PRIMARY KEY (ROWID)
);
CREATE INDEX IX_REPLICATED_TABLE_ROWID_GROUP ON REPLICATED_TABLE (ROWID_GROUP);

CREATE VIEW PARTITIONED_TABLE_GROUP (
   ROWID_GROUP,
   RECORD_COUNT
) AS 
   SELECT ROWID_GROUP,COUNT(*)FROM PARTITIONED_TABLE GROUP BY ROWID_GROUP;

CREATE VIEW REPLICATED_TABLE_GROUP (
   ROWID_GROUP,
   RECORD_COUNT
) AS 
   SELECT ROWID_GROUP,COUNT(*)FROM REPLICATED_TABLE GROUP BY ROWID_GROUP;


CREATE PROCEDURE CountPartitionedTable
   AS
   SELECT COUNT(*) FROM partitioned_table;

CREATE PROCEDURE CountPartitionedTableByGroup
   AS
   SELECT COUNT(*) FROM partitioned_table WHERE rowid_group=?;

CREATE PROCEDURE CountReplicatedTable
   AS
   SELECT COUNT(*) FROM replicated_table;

CREATE PROCEDURE CountReplicatedTableByGroup
   AS
   SELECT COUNT(*) FROM replicated_table WHERE rowid_group=?;

CREATE PROCEDURE InsertPartitionedTableZeroes
   AS
   INSERT INTO partitioned_table VALUES   (?, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '0', '0', '0', '0', '0', '0');

CREATE PROCEDURE InsertReplicatedTableZeroes
   AS
   INSERT INTO replicated_table VALUES   (?, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '0', '0', '0', '0', '0', '0');