CREATE TABLE P1 (
  ID INTEGER NOT NULL,
  VCHAR VARCHAR(300),
  NUM INTEGER,
  RATIO FLOAT,
  PRIMARY KEY (ID)
);
PARTITION TABLE P1 ON COLUMN ID;

CREATE TABLE P2 (
  ID INTEGER NOT NULL,
  VCHAR VARCHAR(300),
  NUM INTEGER,
  RATIO FLOAT,
  PRIMARY KEY (ID)
);
PARTITION TABLE P2 ON COLUMN ID;

CREATE TABLE P3 (
  ID INTEGER NOT NULL,
  VCHAR VARCHAR(300),
  NUM INTEGER,
  RATIO FLOAT,
  PRIMARY KEY (ID)
);
PARTITION TABLE P3 ON COLUMN ID;


CREATE TABLE R1 (
  ID INTEGER NOT NULL,
  VCHAR VARCHAR(300),
  NUM INTEGER,
  RATIO FLOAT,
  PRIMARY KEY (ID)
);

CREATE TABLE R2 (
  ID INTEGER NOT NULL,
  VCHAR VARCHAR(300),
  NUM INTEGER,
  RATIO FLOAT,
  PRIMARY KEY (ID)
);

CREATE TABLE R3 (
  ID INTEGER NOT NULL,
  VCHAR VARCHAR(300),
  NUM INTEGER,
  RATIO FLOAT,
  PRIMARY KEY (ID)
);

-- Define some Materialized Views using Joins; note that we mostly use the same
-- column names used above in the table definitions, since those are the only
-- column names that will be used explicitly in SELECT statements generated from
-- query templates (though SELECT * is also sometimes used, so all columns will
-- be tested, to some extent)

-- Minimal Materialized Views using Joins with 1 column: COUNT(*) only
CREATE VIEW V0 (ID) AS
  SELECT COUNT(*) FROM P1 T1 JOIN P2 T2 ON T1.ID = T2.ID;

CREATE VIEW V1 (ID) AS
  SELECT COUNT(*) FROM P1 T1 JOIN R1 T2 ON T1.ID = T2.NUM;

CREATE VIEW V2 (ID) AS
  SELECT COUNT(*) FROM R1 T1 JOIN R2 T2 ON T1.NUM = T2.NUM;


-- "Simple" Materialized Views using Joins with 2 columns: 1 COUNT(*), 1 Aggregate Function
CREATE VIEW V3 (ID, RATIO) AS
  SELECT COUNT(*),   MIN(T2.RATIO) FROM P1 T1 JOIN P2 T2 USING(ID);

CREATE VIEW V4 (ID, VCHAR) AS
  SELECT COUNT(*),   MAX(T2.VCHAR) FROM P1 T1 JOIN R1 T2 ON T1.NUM = T2.ID;

CREATE VIEW V5 (NUM, ID) AS
  SELECT COUNT(*),   SUM(T1.ID)    FROM R2 T1 JOIN P2 T2 USING(NUM);

CREATE VIEW V6 (ID, NUM) AS
  SELECT COUNT(*), COUNT(T1.NUM)   FROM R1 T1 JOIN R2 T2 ON T1.ID = T2.ID;


-- "Simple" Materialized Views using Joins with 2 columns: 1 GROUP BY, 1 COUNT(*)
CREATE VIEW V7 (RATIO, ID) AS
  SELECT   T1.RATIO, COUNT(*) FROM P1 T1 JOIN P2 T2 ON T1.ID = T2.ID
  GROUP BY T1.RATIO;

CREATE VIEW V8 (NUM, ID) AS
  SELECT   T1.NUM,   COUNT(*) FROM P1 T1 JOIN R1 T2 ON T1.ID = T2.ID
  GROUP BY T1.NUM;

CREATE VIEW V9 (VCHAR, ID) AS
  SELECT   T1.VCHAR, COUNT(*) FROM R2 T1 JOIN P2 T2 ON T1.NUM = T2.ID
  GROUP BY T1.VCHAR;

CREATE VIEW V10 (ID, NUM) AS
  SELECT   T1.ID,    COUNT(*) FROM R1 T1 JOIN R2 T2 USING(NUM)
  GROUP BY T1.ID;


-- "Normal" Materialized Views using Joins with 3 columns: 1 GROUP BY, 1 COUNT(*), 1 Aggregate Function
CREATE VIEW V11 (VCHAR, ID, NUM) AS
  SELECT   T1.VCHAR, COUNT(*),   MIN(T1.NUM)   FROM P1 T1 JOIN P2 T2 ON T1.ID = T2.ID
  GROUP BY T1.VCHAR;

CREATE VIEW V12 (NUM, ID, RATIO) AS
  SELECT   T1.NUM,   COUNT(*),   MAX(T2.RATIO) FROM P1 T1 JOIN P2 T2 USING(ID)
  GROUP BY T1.NUM;

CREATE VIEW V13 (RATIO, NUM, ID) AS
  SELECT   T2.RATIO, COUNT(*),   SUM(T1.ID)    FROM P1 T1 JOIN R1 T2 USING(ID)
  GROUP BY T2.RATIO;

CREATE VIEW V14 (ID, NUM, VCHAR) AS
  SELECT   T2.ID,    COUNT(*), COUNT(T2.VCHAR) FROM P1 T1 JOIN R1 T2 ON T1.ID = T2.NUM
  GROUP BY T2.ID;

CREATE VIEW V15 (RATIO, ID, VCHAR) AS
  SELECT   T1.RATIO, COUNT(*),   MIN(T2.VCHAR) FROM R2 T1 JOIN P2 T2 ON T1.NUM = T2.NUM
  GROUP BY T1.RATIO;

CREATE VIEW V16 (ID, COUNT_STAR, NUM) AS
  SELECT   T2.NUM,   COUNT(*),   MAX(T1.NUM)   FROM R1 T1 JOIN R2 T2 ON T1.ID = T2.ID
  GROUP BY T2.NUM;

CREATE VIEW V17 (VCHAR, ID, RATIO) AS
  SELECT   T1.VCHAR, COUNT(*),   SUM(T2.RATIO) FROM R1 T1 JOIN R2 T2 ON T1.NUM = T2.ID
  GROUP BY T1.VCHAR;

CREATE VIEW V18 (NUM, COUNT_STAR, ID) AS
  SELECT   T1.NUM,   COUNT(*), COUNT(T1.ID)    FROM R1 T1 JOIN R2 T2 USING(NUM)
  GROUP BY T1.NUM;


-- "Normal-plus" Materialized Views using Joins with 4 or more columns
CREATE VIEW V19 (RATIO, ID, NUM, VCHAR) AS
  SELECT   T1.RATIO,           COUNT(*), COUNT(T2.NUM),     MAX(T2.VCHAR) FROM P1 T1 JOIN P2 T2 ON T1.ID = T2.ID
  GROUP BY T1.RATIO;

CREATE VIEW V20 (ID, RATIO, NUM, VCHAR) AS
  SELECT   T1.ID,    T2.RATIO, COUNT(*),   MIN(T1.VCHAR)                  FROM P1 T1 JOIN R1 T2 ON T1.ID  = T2.NUM
  GROUP BY T1.ID,    T2.RATIO;

CREATE VIEW V21 (NUM, VCHAR, COUNT_STAR, RATIO, ID) AS
  SELECT   T2.NUM,   T2.VCHAR, COUNT(*),   MIN(T1.RATIO), COUNT(T2.ID)    FROM R2 T1 JOIN P2 T2 ON T1.ID  = T2.NUM
  GROUP BY T2.NUM,   T2.VCHAR;

CREATE VIEW V22 (VCHAR, NUM, COUNT_STAR, ID, RATIO) AS
  SELECT   T1.VCHAR, T2.NUM,   COUNT(*),   MAX(T2.ID),      SUM(T1.RATIO) FROM R1 T1 JOIN R2 T2 ON T1.NUM = T2.NUM
  GROUP BY T1.VCHAR, T2.NUM;

CREATE VIEW V23 (NUM, VCHAR, NUM2, COUNT_STAR, ID, RATIO, RATIO2) AS
  SELECT   T1.NUM, T1.VCHAR, T2.NUM, COUNT(*), MIN(T2.ID), MAX(T1.RATIO), SUM(T2.RATIO) FROM P1 T1 JOIN R1 T2 ON T1.ID = T2.ID
  GROUP BY T1.NUM, T1.VCHAR, T2.NUM;


-- "Abnormal" Materialized Views using Joins that are not equi-joins (cannot use 2 partitioned tables)
CREATE VIEW V24 (NUM, ID, NUM2) AS
  SELECT   T1.NUM,   COUNT(*),   MIN(T2.NUM)   FROM P1 T1 JOIN R1 T2 ON T1.ID  <  T2.ID
  GROUP BY T1.NUM;

CREATE VIEW V25 (RATIO, ID, VCHAR) AS
  SELECT   T1.RATIO, COUNT(*),   MAX(T2.VCHAR) FROM R2 T1 JOIN P2 T2 ON T1.ID  >  T2.NUM
  GROUP BY T1.RATIO;

CREATE VIEW V26 (ID, NUM, RATIO) AS
  SELECT   T1.ID,    COUNT(*),   SUM(T2.RATIO) FROM R1 T1 JOIN R2 T2 ON T1.NUM <= T2.NUM
  GROUP BY T1.ID;

CREATE VIEW V27 (VCHAR, ID, NUM) AS
  SELECT   T1.VCHAR, COUNT(*), COUNT(T2.NUM)   FROM R1 T1 JOIN R2 T2 ON T1.ID  >= T2.NUM
  GROUP BY T1.VCHAR;


-- Cross-joins (cannot cross-join 2 partitioned tables)
CREATE VIEW V28 (NUM, ID, VCHAR) AS
  SELECT   T1.NUM,   COUNT(*),   MIN(T2.VCHAR) FROM P1 T1 CROSS JOIN R1 T2
  GROUP BY T1.NUM;

CREATE VIEW V29 (VCHAR, ID, RATIO) AS
  SELECT   T1.VCHAR, COUNT(*),   MAX(T2.RATIO) FROM R2 T1 CROSS JOIN P2 T2
  GROUP BY T1.VCHAR;

CREATE VIEW V30 (RATIO, ID, NUM) AS
  SELECT   T1.RATIO, COUNT(*), COUNT(T2.NUM)   FROM R1 T1 CROSS JOIN R2 T2
  GROUP BY T1.RATIO;


-- "Complex" Materialized Views using Joins on 3 tables
CREATE VIEW V31 (VCHAR, COUNT_STAR, NUM, ID) AS
  SELECT   T1.VCHAR, COUNT(*),   MIN(T2.NUM),   COUNT(T3.RATIO) FROM P1 T1 JOIN P2 T2 ON T1.ID = T2.ID JOIN P3 T3 ON T2.ID = T3.ID
  GROUP BY T1.VCHAR;

CREATE VIEW V32 (NUM, ID, RATIO, VCHAR) AS
  SELECT   T1.NUM,   COUNT(*),   MAX(T2.RATIO),   MIN(T3.VCHAR) FROM P1 T1 JOIN P2 T2 ON T1.ID = T2.ID JOIN R1 T3 ON T2.ID = T3.ID
  GROUP BY T1.NUM;

CREATE VIEW V33 (RATIO, COUNT_STAR, ID, NUM) AS
  SELECT   T1.RATIO, COUNT(*), COUNT(T2.VCHAR),   SUM(T3.NUM)   FROM P1 T1 JOIN R1 T2 ON T1.ID = T2.ID JOIN R2 T3 ON T2.ID = T3.ID
  GROUP BY T1.RATIO;

CREATE VIEW V34 (RATIO, ID, NUM, VCHAR) AS
  SELECT   T1.RATIO, COUNT(*),   SUM(T2.NUM),     MAX(T3.VCHAR) FROM R1 T1 JOIN R2 T2 ON T1.ID = T2.ID JOIN R3 T3 ON T2.ID = T3.ID
  GROUP BY T1.RATIO;


-- Joins on 4 tables!
CREATE VIEW V35 (VCHAR, NUM, COUNT_STAR, RATIO, ID) AS
  SELECT   T1.VCHAR, T2.NUM,   COUNT(*), MIN(T3.RATIO), COUNT(T4.VCHAR) FROM P1 T1 JOIN P2 T2 ON T1.ID = T2.ID JOIN R1 T3 ON T2.ID = T3.ID JOIN R2 T4 ON T2.ID = T4.ID
  GROUP BY T1.VCHAR, T2.NUM;

CREATE VIEW V36 (NUM, RATIO, COUNT_STAR, VCHAR, ID) AS
  SELECT   T1.NUM,   T2.RATIO, COUNT(*), MAX(T3.VCHAR),   SUM(T4.ID)    FROM P1 T1 JOIN P2 T2 ON T1.ID = T2.ID JOIN R1 T3 ON T2.ID = T3.ID JOIN R2 T4 ON T3.ID = T4.ID
  GROUP BY T1.NUM,   T2.RATIO;
