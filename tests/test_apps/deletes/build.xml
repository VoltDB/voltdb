<?xml version="1.0" ?>
<project default="main" name="build file">

<property environment="env"/>

<property name='build.dir'             location='obj/' />
<property name='src.dir'               location='src/' />
<property name='debugoutput.dir'       location='debugoutput/' />
<property name='junit.haltonfailure'   value='true' />

<path id='project.classpath'>
    <fileset dir="${env.VOLTDB}">
        <include name="voltdb*.jar"/>
    </fileset>
    <pathelement location='${build.dir}' />
    <pathelement path="${java.class.path}"/>
</path>

<!--
***************************************
PRIMARY ENTRY POINTS
***************************************
-->

<target name="main" depends="compile" description="default. Compile Java stored procedures and and then run the VoltDB compiler on the stored procedures and schema to generate a catalog" />

<target name="server" depends="catalog" description="Example: ant server. Start a VoltDB server.">
    <java fork="yes" classname="org.voltdb.VoltDB">
        <jvmarg value="-Djava.library.path=${env.VOLTDB}" />
        <jvmarg value="-server"/>
        <jvmarg value="-Xmx512m"/>
        <jvmarg value="-Xms512m"/>
        <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError" />
        <jvmarg value="-XX:HeapDumpPath=/tmp" />
        <jvmarg value="-XX:-ReduceInitialCardMarks" />
        <arg value="catalog"/>
        <arg value="catalog.jar"/>
        <arg value="deployment"/>
        <arg value="deployment.xml"/>
        <arg value="host"/>
        <arg value="localhost"/>
        <classpath refid='project.classpath'/>
        <assertions><disable/></assertions>
    </java>
</target>

<target name="server-small" depends="catalog-small" description="Example: ant server. Start a VoltDB server.">
    <java fork="yes" classname="org.voltdb.VoltDB">
        <jvmarg value="-Djava.library.path=${env.VOLTDB}" />
        <jvmarg value="-server"/>
        <jvmarg value="-Xmx512m"/>
        <jvmarg value="-Xms512m"/>
        <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError" />
        <jvmarg value="-XX:HeapDumpPath=/tmp" />
        <jvmarg value="-XX:-ReduceInitialCardMarks" />
        <arg value="catalog"/>
        <arg value="catalog-small.jar"/>
        <arg value="deployment"/>
        <arg value="deployment.xml"/>
        <arg value="host"/>
        <arg value="localhost"/>
        <classpath refid='project.classpath'/>
        <assertions><disable/></assertions>
    </java>
</target>

<target name="client" depends="srccompile" description="Start the client">
  <java fork="yes" classname="com.DeletesClient">
    <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError" />
    <jvmarg value="-XX:HeapDumpPath=/tmp" />
    <jvmarg value="-XX:-ReduceInitialCardMarks" />
    <jvmarg value="-Djava.library.path=${env.VOLTDB}" />
    <arg value="150000"/>            <!-- average batch size -->
    <arg value="5"/>                 <!-- number of batches to keep -->
    <arg value="6"/>                 <!-- number of insert/delete cycles between pruning deceased rows -->
    <arg value="6"/>                 <!-- number of insert/delete cycles between snapshots -->
    <arg value="0"/>                 <!-- use blocking snapshots if non-zero -->
    <arg value="0"/>                 <!-- use inline-able strings if non-zero -->
    <arg value="localhost" />        <!-- comma separated list of volt servers to connect to -->
    <classpath refid='project.classpath'/>
    <assertions><disable/></assertions>
  </java>
</target>

<target name="client-small" depends="srccompile" description="Start the client">
  <java fork="yes" classname="com.DeletesClient">
    <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError" />
    <jvmarg value="-XX:HeapDumpPath=/tmp" />
    <jvmarg value="-XX:-ReduceInitialCardMarks" />
    <jvmarg value="-Djava.library.path=${env.VOLTDB}" />
    <arg value="150000"/>            <!-- average batch size -->
    <arg value="5"/>                 <!-- number of batches to keep -->
    <arg value="6"/>                 <!-- number of insert/delete cycles between pruning deceased rows -->
    <arg value="6"/>                 <!-- number of insert/delete cycles between snapshots -->
    <arg value="0"/>                 <!-- use blocking snapshots if non-zero -->
    <arg value="1"/>                 <!-- use inline-able strings if non-zero -->
    <arg value="localhost" />        <!-- comma separated list of volt servers to connect to -->
    <classpath refid='project.classpath'/>
    <assertions><disable/></assertions>
  </java>
</target>

<target name="build" depends="compile"/>

<target name="compile" depends="srccompile" description="Compile the catalog using the schema and the DDL file" >
    <java fork="yes" classname="org.voltdb.compiler.VoltCompiler" >
        <jvmarg value="-Djava.library.path=${env.VOLTDB}" />
        <arg value="project.xml"/> <!-- project file -->
        <arg value="catalog.jar"/> <!-- output -->
        <classpath refid='project.classpath' />
        <assertions><disable /></assertions>
    </java>
</target>

<target name="compile-small" depends="srccompile" description="Compile the catalog using the schema and the DDL file" >
    <java fork="yes" classname="org.voltdb.compiler.VoltCompiler" >
        <jvmarg value="-Djava.library.path=${env.VOLTDB}" />
        <arg value="project-small.xml"/> <!-- project file -->
        <arg value="catalog-small.jar"/> <!-- output -->
        <classpath refid='project.classpath' />
        <assertions><disable /></assertions>
    </java>
</target>

<target name="catalog" depends="compile" description="Compile the catalog using the schema and the DDL file" >
    <java fork="yes" classname="org.voltdb.compiler.VoltCompiler" >
        <jvmarg value="-Djava.library.path=${env.VOLTDB}" />
        <arg value="project.xml"/> <!-- project file -->
        <arg value="catalog.jar"/> <!-- output -->
        <classpath refid='project.classpath' />
        <assertions><disable /></assertions>
    </java>
</target>

<target name="catalog-small" depends="compile-small" description="Compile the catalog using the schema and the DDL file" >
    <java fork="yes" classname="org.voltdb.compiler.VoltCompiler" >
        <jvmarg value="-Djava.library.path=${env.VOLTDB}" />
        <arg value="project-small.xml"/> <!-- project file -->
        <arg value="catalog-small.jar"/> <!-- output -->
        <classpath refid='project.classpath' />
        <assertions><disable /></assertions>
    </java>
</target>



<!--
***************************************
CLEANING
***************************************
-->

<target name='clean' description="remove all compiled files">
    <delete includeemptydirs="true" failonerror='false'>
        <fileset dir="${build.dir}" includes="**/*" />
        <fileset dir="${debugoutput.dir}" includes="**/*" />
        <fileset dir="." defaultexcludes="yes" >
            <include name="catalog.jar" />
            <include name="catalog-small.jar" />
        </fileset>
    </delete>
</target>

<!--
***************************************
JAVA COMPILATION
***************************************
-->

<target name="srccompile">
    <mkdir dir='${build.dir}' />
    <javac target="1.7" source="1.7" srcdir="${src.dir}" destdir='${build.dir}' debug='true'>
        <compilerarg value="-Xlint:deprecation"/>
        <classpath refid="project.classpath" />
    </javac>
</target>


</project>
