-- replicated table, pure column index
CREATE TABLE R (
    C1 INTEGER NOT NULL,
    C2 INTEGER NOT NULL,
    C3 INTEGER NOT NULL,
    C4 INTEGER NOT NULL
);
CREATE INDEX R_IDX1_TREE ON R(C1);
CREATE INDEX R_IDX2_TREE ON R(C1, C2);
CREATE INDEX R_IDX3_TREE ON R(C2, C1);
CREATE INDEX R_IDX4_TREE ON R(C1, C2, C3);

-- replicated table, expression index (mixed case too)
CREATE TABLE ER (
    C1 INTEGER NOT NULL,
    C2 INTEGER NOT NULL,
    C3 INTEGER NOT NULL,
    C4 INTEGER NOT NULL
);
CREATE INDEX ER_IDX1_TREE ON ER(C1 + C2);
CREATE INDEX ER_IDX2_TREE ON ER(ABS(C3 - 100));
CREATE INDEX ER_IDX3_TREE ON ER(C1 - C2, C2 - C3);
CREATE INDEX ER_IDX4_TREE ON ER(C1, C2 * C3);
CREATE INDEX ER_IDX5_TREE ON ER(C1 + C2, C3);

-- partitioned table, partiton column is indexable
CREATE TABLE P1 (
    C1 INTEGER NOT NULL,
    C2 INTEGER NOT NULL,
    C3 INTEGER NOT NULL,
    C4 INTEGER NOT NULL
);
PARTITION TABLE P1 ON COLUMN C1;
CREATE INDEX P1_IDX1_TREE ON P1(C1);
CREATE INDEX P1_IDX2_TREE ON P1(C1, C2);
CREATE INDEX P1_IDX3_TREE ON P1(C2, C1);
CREATE INDEX P1_IDX4_TREE ON P1(C1, C2, C3);

-- partitioned table, partiton column is not indexable
CREATE TABLE P2 (
    C1 INTEGER NOT NULL,
    C2 INTEGER NOT NULL,
    C3 INTEGER NOT NULL,
    C4 INTEGER NOT NULL
);

PARTITION TABLE P2 ON COLUMN C4;
CREATE INDEX P2_IDX1_TREE ON P2(C1);
CREATE INDEX P2_IDX2_TREE ON P2(C1, C2);
CREATE INDEX P2_IDX3_TREE ON P2(C2, C1);
CREATE INDEX P2_IDX4_TREE ON P2(C1, C2, C3);
