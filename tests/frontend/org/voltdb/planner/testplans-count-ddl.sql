CREATE TABLE T1 (
	ID INTEGER NOT NULL,
	POINTS INTEGER NOT NULL,
	AGE TINYINT,
	PRIMARY KEY (ID)
);
create index idx_1_tree on T1 (POINTS);
create index idx_t1_id_age on T1 (ID, AGE);
create index idx_t1_id_pts on T1 (ID, POINTS);
create index idx1_t1_tree on T1 (AGE, (ID + POINTS));
create index idx2_t1_tree on T1 (AGE/2, ABS(AGE));

CREATE TABLE T2 (
	ID INTEGER NOT NULL,
	USERNAME VARCHAR(10) NOT NULL,
	POINTS INTEGER NOT NULL,
	AGE TINYINT NOT NULL,
	PRIMARY KEY (ID)
);
create unique index idx_2_tree on T2 (USERNAME,POINTS);
create index idx_t2_tree on T2 (ID, USERNAME);

CREATE TABLE P1 (
  ID INTEGER DEFAULT '0' NOT NULL,
  DESC VARCHAR(300),
  NUM INTEGER NOT NULL,
  RATIO FLOAT,
  PRIMARY KEY (ID)
);
CREATE INDEX P1_IDX_NUM_TREE ON P1 (NUM);
CREATE INDEX P1_NUM_RATIO_TREE ON P1 (NUM, RATIO);
CREATE INDEX P1_IDX_ID_NUM ON P1 (ID, NUM);
CREATE INDEX P1_IDX_ID_RATIO ON P1 (ID, RATIO);

PARTITION TABLE P1 ON COLUMN ID;

CREATE TABLE T3 (
    T3_ID INTEGER DEFAULT '0' NOT NULL,
    T3_DESC VARCHAR(300),
    T3_NUM1 INTEGER NOT NULL,
    T3_NUM2 INTEGER NOT NULL,
    PRIMARY KEY (T3_ID)
);
CREATE INDEX T3_IDX_T3NUM_TREE ON T3 (T3_NUM1,T3_NUM2);

CREATE TABLE T_ENG_11096 (a INT, b INT, c INT, d INT);
CREATE INDEX IDX_ENG_11096 ON T_ENG_11096(a, b, c);
