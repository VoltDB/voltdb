-- This schema is used to generate a catalog for the
-- C++ unit test execution/engine_test.  If this schema changes
-- the encoded catalog in that unit test may need to be changed.
-- See that file for directions on how to do this.  These directions
-- are onerously complex.
DROP INDEX TABLEINDEX1 IF EXISTS;
DROP INDEX TABLEINDEX2 IF EXISTS;
DROP INDEX TABLEINDEX3 IF EXISTS;
DROP TABLE CUSTOMER IF EXISTS;

DROP INDEX D_TABLEINDEX1 IF EXISTS;
DROP INDEX D_TABLEINDEX2 IF EXISTS;
DROP INDEX D_TABLEINDEX3 IF EXISTS;
DROP TABLE D_CUSTOMER IF EXISTS;

DROP INDEX R_TABLEINDEX1 IF EXISTS;
DROP INDEX R_TABLEINDEX2 IF EXISTS;
DROP INDEX R_TABLEINDEX3 IF EXISTS;
DROP TABLE R_CUSTOMER IF EXISTS;

CREATE TABLE D_CUSTOMER (
  D_CUSTOMERID          INTEGER NOT NULL,
  D_FIRSTNAME           VARCHAR,
  D_LASTNAME            VARCHAR,
  D_ZIPCODE             INTEGER,
  PRIMARY KEY           (D_CUSTOMERID)
);
PARTITION TABLE D_CUSTOMER ON COLUMN D_CUSTOMERID;
CREATE INDEX D_TABLEINDEX1 ON D_CUSTOMER (D_CUSTOMERID);
CREATE UNIQUE INDEX D_TABLEINDEX2 ON D_CUSTOMER (D_CUSTOMERID, D_FIRSTNAME, D_LASTNAME);
CREATE INDEX D_TABLEINDEX3 ON D_CUSTOMER (D_FIRSTNAME, D_LASTNAME);

CREATE TABLE R_CUSTOMER (
  R_CUSTOMERID          INTEGER NOT NULL,
  R_FIRSTNAME           VARCHAR,
  R_LASTNAME            VARCHAR,
  R_ZIPCODE             INTEGER,
  PRIMARY KEY           (R_CUSTOMERID)
);
CREATE INDEX R_TABLEINDEX1 ON R_CUSTOMER (R_CUSTOMERID);
CREATE UNIQUE INDEX R_TABLEINDEX2 ON R_CUSTOMER (R_CUSTOMERID, R_FIRSTNAME, R_LASTNAME);
CREATE INDEX R_TABLEINDEX3 ON R_CUSTOMER (R_FIRSTNAME, R_LASTNAME);

