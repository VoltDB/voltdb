CREATE PROCEDURE UPDATEORDERITEMS
PARTITION ON TABLE ORDERITEMS COLUMN ORDER_ID PARAMETER 2 AS
    UPDATE ORDERITEMS SET PID=?, QTY=? WHERE ORDER_ID=? AND PID=? AND QTY=?;

CREATE TABLE PRODUCTS (
    PID INTEGER NOT NULL,
    PNAME VARCHAR(50) NOT NULL,
    PRICE FLOAT NOT NULL,
    PRIMARY KEY (PID)
);

CREATE PROCEDURE UPDATEPRODUCTS AS
    UPDATE PRODUCTS SET PNAME=?, PRICE=? WHERE PID=? AND PNAME=? AND PRICE=?;

-- replicated join partitioned, no partition column for view table.
CREATE VIEW ORDER_COUNT_NOPCOL (NAME, CNT) AS
    SELECT CUSTOMERS.NAME, COUNT(*)
    FROM CUSTOMERS JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID
    GROUP BY CUSTOMERS.NAME;

CREATE PROCEDURE PROC_ORDER_COUNT_NOPCOL AS
    SELECT CUSTOMERS.NAME, COUNT(*)
    FROM CUSTOMERS JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID
    GROUP BY CUSTOMERS.NAME
    ORDER BY 1;

-- replicated join partitioned, no group by column.
CREATE VIEW ORDER_COUNT_GLOBAL (CNT, CNTID, MINID, MAXID, SUMID) AS
    SELECT COUNT(*), COUNT(ORDERS.ORDER_ID), MIN(ORDERS.ORDER_ID),
           MAX(ORDERS.ORDER_ID), SUM(ORDERS.ORDER_ID) FROM
    CUSTOMERS JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID;

CREATE PROCEDURE PROC_ORDER_COUNT_GLOBAL AS
    SELECT COUNT(*), COUNT(ORDERS.ORDER_ID), MIN(ORDERS.ORDER_ID),
           MAX(ORDERS.ORDER_ID), SUM(ORDERS.ORDER_ID) FROM
    CUSTOMERS JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID
    ORDER BY 1;

-- four source tables, no partition column for view table.
CREATE VIEW ORDER_DETAIL_NOPCOL (NAME, CNT, SUMAMT, MINUNIT, MAXUNIT, ITEMCOUNT) AS
    SELECT
        CUSTOMERS.NAME,
        COUNT(*),
        SUM(PRODUCTS.PRICE * ORDERITEMS.QTY),
        MIN(PRODUCTS.PRICE),
        MAX(PRODUCTS.PRICE),
        COUNT(ORDERITEMS.PID)
    FROM CUSTOMERS JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID
                   JOIN ORDERITEMS ON ORDERS.ORDER_ID = ORDERITEMS.ORDER_ID
                   JOIN PRODUCTS ON ORDERITEMS.PID = PRODUCTS.PID
    GROUP BY CUSTOMERS.NAME;

CREATE PROCEDURE PROC_ORDER_DETAIL_NOPCOL AS
    SELECT
        CUSTOMERS.NAME,
        COUNT(*),
        SUM(PRODUCTS.PRICE * ORDERITEMS.QTY),
        MIN(PRODUCTS.PRICE),
        MAX(PRODUCTS.PRICE),
        COUNT(ORDERITEMS.PID)
    FROM CUSTOMERS JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID
                   JOIN ORDERITEMS ON ORDERS.ORDER_ID = ORDERITEMS.ORDER_ID
                   JOIN PRODUCTS ON ORDERITEMS.PID = PRODUCTS.PID
    GROUP BY CUSTOMERS.NAME
    ORDER BY 1;

-- four source tables, has partition column for view table.
CREATE VIEW ORDER_DETAIL_WITHPCOL (NAME, ORDER_ID, CNT, MINUNIT, MAXUNIT) AS
    SELECT
        CUSTOMERS.NAME,
        ORDERS.ORDER_ID,
        COUNT(*),
        MIN(PRODUCTS.PRICE),
        MAX(PRODUCTS.PRICE)
    FROM CUSTOMERS JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID
                   JOIN ORDERITEMS ON ORDERS.ORDER_ID = ORDERITEMS.ORDER_ID
                   JOIN PRODUCTS ON ORDERITEMS.PID = PRODUCTS.PID
    GROUP BY CUSTOMERS.NAME, ORDERS.ORDER_ID;

CREATE PROCEDURE PROC_ORDER_DETAIL_WITHPCOL AS
    SELECT
        CUSTOMERS.NAME,
        ORDERS.ORDER_ID,
        COUNT(*),
        MIN(PRODUCTS.PRICE),
        MAX(PRODUCTS.PRICE)
    FROM CUSTOMERS JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID
                   JOIN ORDERITEMS ON ORDERS.ORDER_ID = ORDERITEMS.ORDER_ID
                   JOIN PRODUCTS ON ORDERITEMS.PID = PRODUCTS.PID
    GROUP BY CUSTOMERS.NAME, ORDERS.ORDER_ID
    ORDER BY 1,2;

-- replicated join partitioned, has where predicate.
CREATE VIEW ORDER2016 (NAME, CNT) AS
    SELECT
        CUSTOMERS.NAME,
        COUNT(*)
    FROM CUSTOMERS JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID
    WHERE ORDERS.ORDER_TIME >= '2016-01-01 00:00:00'
    GROUP BY CUSTOMERS.NAME;
