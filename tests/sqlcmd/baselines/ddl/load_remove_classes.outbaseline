
drop function intrun if exists;
Command succeeded.

drop procedure UsesUDF if exists;
Command succeeded.

drop table r if exists;
Command succeeded.

drop table s if exists;
Command succeeded.

drop table t if exists;
Command succeeded.

drop table t2 if exists;
Command succeeded.

drop table addable if exists;
Command succeeded.

drop table dropable if exists;
Command succeeded.

drop table my_table_1 if exists;
Command succeeded.

drop table my_table_2 if exists;
Command succeeded.

drop table my_table_3 if exists;
Command succeeded.

drop table prefixes if exists;
Command succeeded.

drop table raw if exists;
Command succeeded.

--- Empty Class List -----------------------------------------



load classes sqlcmdtest-procs.jar;
Command succeeded.

--- Potential Procedure Classes ------------------------------
 sqlcmdtest.BadSwap                       
 sqlcmdtest.BoxedInsertEmployee           
 sqlcmdtest.Breakable0                    
 sqlcmdtest.Breakable1                    
 sqlcmdtest.Breakable2                    
 sqlcmdtest.InsertEmployee                
 sqlcmdtest.Trivial                       
 sqlcmdtest.UsesUDF                       

--- Non-Procedure Classes ------------------------------------
 sqlcmdtest.Breakable0$NestedGetsSabotaged
 sqlcmdtest.Breakable1$NestedGetsKilled   
 sqlcmdtest.ReferencedGetsSabotaged       


load classes sqlcmdtest-funcs.jar;
Command succeeded.

--- Potential Procedure Classes ------------------------------
 sqlcmdtest.BadSwap                       
 sqlcmdtest.BoxedInsertEmployee           
 sqlcmdtest.Breakable0                    
 sqlcmdtest.Breakable1                    
 sqlcmdtest.Breakable2                    
 sqlcmdtest.InsertEmployee                
 sqlcmdtest.Trivial                       
 sqlcmdtest.UsesUDF                       

--- Non-Procedure Classes ------------------------------------
 sqlcmdtest.Breakable0$NestedGetsSabotaged
 sqlcmdtest.Breakable1$NestedGetsKilled   
 sqlcmdtest.IntFunction                   
 sqlcmdtest.ReferencedGetsSabotaged       


drop table EMPLOYEE if exists;
Command succeeded.

create table EMPLOYEE (
  ID integer not null,
  FIRST_NAME varchar,
  LAST_NAME varchar not null,
  DEPARTMENT varchar,
primary key (ID));
Command succeeded.

--- System Procedures ----------------------------------------
@ElasticRemoveNT          	tinyint, varchar, varchar
@Explain                  	varchar
@ExplainProc              	varchar
@ExplainView              	varchar
@GC                       
@GetPartitionKeys         	varchar
@JStack                   	int
@Pause                    
@Ping                     
@Promote                  
@Quiesce                  
@ResetDR                  	tinyint, tinyint, tinyint
@Resume                   
@Shutdown                 
@SnapshotDelete           	varchar, varchar
@SnapshotRestore          	varchar, varchar
@SnapshotRestore          	varchar
@SnapshotSave             
@SnapshotSave             	varchar
@SnapshotSave             	varchar, varchar, bit
@SnapshotScan             	varchar
@SnapshotStatus           
@Statistics               	statisticscomponent, bit
@StopNode                 	int
@SwapTables               	varchar, varchar
@SystemCatalog            	metadataselector
@SystemInformation        	sysinfoselector
@Trace                    
@Trace                    	varchar
@Trace                    	varchar, varchar
@UpdateApplicationCatalog 	varchar, varchar
@UpdateClasses            	varchar, varchar
@UpdateLogging            	varchar
@ValidatePartitioning     	int, varbinary

--- User Procedures ------------------------------------------
EMPLOYEE.delete           	integer
EMPLOYEE.insert           	integer, varchar, varchar, varchar
EMPLOYEE.update           	integer, varchar, varchar, varchar, integer
EMPLOYEE.upsert           	integer, varchar, varchar, varchar


create procedure from class sqlcmdtest.InsertEmployee;
Command succeeded.

--- System Procedures ----------------------------------------
@ElasticRemoveNT          	tinyint, varchar, varchar
@Explain                  	varchar
@ExplainProc              	varchar
@ExplainView              	varchar
@GC                       
@GetPartitionKeys         	varchar
@JStack                   	int
@Pause                    
@Ping                     
@Promote                  
@Quiesce                  
@ResetDR                  	tinyint, tinyint, tinyint
@Resume                   
@Shutdown                 
@SnapshotDelete           	varchar, varchar
@SnapshotRestore          	varchar, varchar
@SnapshotRestore          	varchar
@SnapshotSave             
@SnapshotSave             	varchar
@SnapshotSave             	varchar, varchar, bit
@SnapshotScan             	varchar
@SnapshotStatus           
@Statistics               	statisticscomponent, bit
@StopNode                 	int
@SwapTables               	varchar, varchar
@SystemCatalog            	metadataselector
@SystemInformation        	sysinfoselector
@Trace                    
@Trace                    	varchar
@Trace                    	varchar, varchar
@UpdateApplicationCatalog 	varchar, varchar
@UpdateClasses            	varchar, varchar
@UpdateLogging            	varchar
@ValidatePartitioning     	int, varbinary

--- User Procedures ------------------------------------------
EMPLOYEE.delete           	integer
EMPLOYEE.insert           	integer, varchar, varchar, varchar
EMPLOYEE.update           	integer, varchar, varchar, varchar, integer
EMPLOYEE.upsert           	integer, varchar, varchar, varchar
InsertEmployee            	varchar, varchar, varchar


--- Potential Procedure Classes ------------------------------
 sqlcmdtest.BadSwap                       
 sqlcmdtest.BoxedInsertEmployee           
 sqlcmdtest.Breakable0                    
 sqlcmdtest.Breakable1                    
 sqlcmdtest.Breakable2                    
 sqlcmdtest.Trivial                       
 sqlcmdtest.UsesUDF                       

--- Active Procedure Classes ---------------------------------
 sqlcmdtest.InsertEmployee                

--- Non-Procedure Classes ------------------------------------
 sqlcmdtest.Breakable0$NestedGetsSabotaged
 sqlcmdtest.Breakable1$NestedGetsKilled   
 sqlcmdtest.IntFunction                   
 sqlcmdtest.ReferencedGetsSabotaged       


select * from EMPLOYEE;
ID  FIRST_NAME  LAST_NAME  DEPARTMENT 
--- ----------- ---------- -----------

(Returned 0 rows in #.##s)

select MAX(ID) from EMPLOYEE;
C1   
-----
 NULL

(Returned 1 rows in #.##s)

exec InsertEmployee John Smith Engineering;
(Returned 1 rows in #.##s)

select * from EMPLOYEE;
ID  FIRST_NAME  LAST_NAME  DEPARTMENT  
--- ----------- ---------- ------------
  1 John        Smith      Engineering 

(Returned 1 rows in #.##s)

select MAX(ID) from EMPLOYEE;
C1 
---
  1

(Returned 1 rows in #.##s)

exec InsertEmployee Jane Jones Sales;
(Returned 1 rows in #.##s)

select * from EMPLOYEE;
ID  FIRST_NAME  LAST_NAME  DEPARTMENT  
--- ----------- ---------- ------------
  1 John        Smith      Engineering 
  2 Jane        Jones      Sales       

(Returned 2 rows in #.##s)

select MAX(ID) from EMPLOYEE;
C1 
---
  2

(Returned 1 rows in #.##s)

drop procedure InsertEmployee;
Command succeeded.

--- System Procedures ----------------------------------------
@ElasticRemoveNT          	tinyint, varchar, varchar
@Explain                  	varchar
@ExplainProc              	varchar
@ExplainView              	varchar
@GC                       
@GetPartitionKeys         	varchar
@JStack                   	int
@Pause                    
@Ping                     
@Promote                  
@Quiesce                  
@ResetDR                  	tinyint, tinyint, tinyint
@Resume                   
@Shutdown                 
@SnapshotDelete           	varchar, varchar
@SnapshotRestore          	varchar, varchar
@SnapshotRestore          	varchar
@SnapshotSave             
@SnapshotSave             	varchar
@SnapshotSave             	varchar, varchar, bit
@SnapshotScan             	varchar
@SnapshotStatus           
@Statistics               	statisticscomponent, bit
@StopNode                 	int
@SwapTables               	varchar, varchar
@SystemCatalog            	metadataselector
@SystemInformation        	sysinfoselector
@Trace                    
@Trace                    	varchar
@Trace                    	varchar, varchar
@UpdateApplicationCatalog 	varchar, varchar
@UpdateClasses            	varchar, varchar
@UpdateLogging            	varchar
@ValidatePartitioning     	int, varbinary

--- User Procedures ------------------------------------------
EMPLOYEE.delete           	integer
EMPLOYEE.insert           	integer, varchar, varchar, varchar
EMPLOYEE.update           	integer, varchar, varchar, varchar, integer
EMPLOYEE.upsert           	integer, varchar, varchar, varchar


--- Potential Procedure Classes ------------------------------
 sqlcmdtest.BadSwap                       
 sqlcmdtest.BoxedInsertEmployee           
 sqlcmdtest.Breakable0                    
 sqlcmdtest.Breakable1                    
 sqlcmdtest.Breakable2                    
 sqlcmdtest.InsertEmployee                
 sqlcmdtest.Trivial                       
 sqlcmdtest.UsesUDF                       

--- Non-Procedure Classes ------------------------------------
 sqlcmdtest.Breakable0$NestedGetsSabotaged
 sqlcmdtest.Breakable1$NestedGetsKilled   
 sqlcmdtest.IntFunction                   
 sqlcmdtest.ReferencedGetsSabotaged       


--- System Procedures ----------------------------------------
@ElasticRemoveNT          	tinyint, varchar, varchar
@Explain                  	varchar
@ExplainProc              	varchar
@ExplainView              	varchar
@GC                       
@GetPartitionKeys         	varchar
@JStack                   	int
@Pause                    
@Ping                     
@Promote                  
@Quiesce                  
@ResetDR                  	tinyint, tinyint, tinyint
@Resume                   
@Shutdown                 
@SnapshotDelete           	varchar, varchar
@SnapshotRestore          	varchar, varchar
@SnapshotRestore          	varchar
@SnapshotSave             
@SnapshotSave             	varchar
@SnapshotSave             	varchar, varchar, bit
@SnapshotScan             	varchar
@SnapshotStatus           
@Statistics               	statisticscomponent, bit
@StopNode                 	int
@SwapTables               	varchar, varchar
@SystemCatalog            	metadataselector
@SystemInformation        	sysinfoselector
@Trace                    
@Trace                    	varchar
@Trace                    	varchar, varchar
@UpdateApplicationCatalog 	varchar, varchar
@UpdateClasses            	varchar, varchar
@UpdateLogging            	varchar
@ValidatePartitioning     	int, varbinary

--- User Procedures ------------------------------------------
EMPLOYEE.delete           	integer
EMPLOYEE.insert           	integer, varchar, varchar, varchar
EMPLOYEE.update           	integer, varchar, varchar, varchar, integer
EMPLOYEE.upsert           	integer, varchar, varchar, varchar


create procedure from class sqlcmdtest.BoxedInsertEmployee;
Command succeeded.

--- System Procedures ----------------------------------------
@ElasticRemoveNT          	tinyint, varchar, varchar
@Explain                  	varchar
@ExplainProc              	varchar
@ExplainView              	varchar
@GC                       
@GetPartitionKeys         	varchar
@JStack                   	int
@Pause                    
@Ping                     
@Promote                  
@Quiesce                  
@ResetDR                  	tinyint, tinyint, tinyint
@Resume                   
@Shutdown                 
@SnapshotDelete           	varchar, varchar
@SnapshotRestore          	varchar, varchar
@SnapshotRestore          	varchar
@SnapshotSave             
@SnapshotSave             	varchar
@SnapshotSave             	varchar, varchar, bit
@SnapshotScan             	varchar
@SnapshotStatus           
@Statistics               	statisticscomponent, bit
@StopNode                 	int
@SwapTables               	varchar, varchar
@SystemCatalog            	metadataselector
@SystemInformation        	sysinfoselector
@Trace                    
@Trace                    	varchar
@Trace                    	varchar, varchar
@UpdateApplicationCatalog 	varchar, varchar
@UpdateClasses            	varchar, varchar
@UpdateLogging            	varchar
@ValidatePartitioning     	int, varbinary

--- User Procedures ------------------------------------------
BoxedInsertEmployee       	bigint, varchar, varchar, varchar
EMPLOYEE.delete           	integer
EMPLOYEE.insert           	integer, varchar, varchar, varchar
EMPLOYEE.update           	integer, varchar, varchar, varchar, integer
EMPLOYEE.upsert           	integer, varchar, varchar, varchar


--- Potential Procedure Classes ------------------------------
 sqlcmdtest.BadSwap                       
 sqlcmdtest.Breakable0                    
 sqlcmdtest.Breakable1                    
 sqlcmdtest.Breakable2                    
 sqlcmdtest.InsertEmployee                
 sqlcmdtest.Trivial                       
 sqlcmdtest.UsesUDF                       

--- Active Procedure Classes ---------------------------------
 sqlcmdtest.BoxedInsertEmployee           

--- Non-Procedure Classes ------------------------------------
 sqlcmdtest.Breakable0$NestedGetsSabotaged
 sqlcmdtest.Breakable1$NestedGetsKilled   
 sqlcmdtest.IntFunction                   
 sqlcmdtest.ReferencedGetsSabotaged       


select * from EMPLOYEE;
ID  FIRST_NAME  LAST_NAME  DEPARTMENT  
--- ----------- ---------- ------------
  1 John        Smith      Engineering 
  2 Jane        Jones      Sales       

(Returned 2 rows in #.##s)

select MAX(ID) from EMPLOYEE;
C1 
---
  2

(Returned 1 rows in #.##s)

exec BoxedInsertEmployee 3 John Smith Engineering;
(Returned 1 rows in #.##s)

select * from EMPLOYEE;
ID  FIRST_NAME  LAST_NAME  DEPARTMENT  
--- ----------- ---------- ------------
  1 John        Smith      Engineering 
  2 Jane        Jones      Sales       
  3 John        Smith      Engineering 

(Returned 3 rows in #.##s)

select MAX(ID) from EMPLOYEE;
C1 
---
  3

(Returned 1 rows in #.##s)

exec BoxedInsertEmployee 4 Jane Jones Sales;
(Returned 1 rows in #.##s)

select * from EMPLOYEE;
ID  FIRST_NAME  LAST_NAME  DEPARTMENT  
--- ----------- ---------- ------------
  1 John        Smith      Engineering 
  2 Jane        Jones      Sales       
  3 John        Smith      Engineering 
  4 Jane        Jones      Sales       

(Returned 4 rows in #.##s)

select MAX(ID) from EMPLOYEE;
C1 
---
  4

(Returned 1 rows in #.##s)

drop procedure BoxedInsertEmployee;
Command succeeded.

--- System Procedures ----------------------------------------
@ElasticRemoveNT          	tinyint, varchar, varchar
@Explain                  	varchar
@ExplainProc              	varchar
@ExplainView              	varchar
@GC                       
@GetPartitionKeys         	varchar
@JStack                   	int
@Pause                    
@Ping                     
@Promote                  
@Quiesce                  
@ResetDR                  	tinyint, tinyint, tinyint
@Resume                   
@Shutdown                 
@SnapshotDelete           	varchar, varchar
@SnapshotRestore          	varchar, varchar
@SnapshotRestore          	varchar
@SnapshotSave             
@SnapshotSave             	varchar
@SnapshotSave             	varchar, varchar, bit
@SnapshotScan             	varchar
@SnapshotStatus           
@Statistics               	statisticscomponent, bit
@StopNode                 	int
@SwapTables               	varchar, varchar
@SystemCatalog            	metadataselector
@SystemInformation        	sysinfoselector
@Trace                    
@Trace                    	varchar
@Trace                    	varchar, varchar
@UpdateApplicationCatalog 	varchar, varchar
@UpdateClasses            	varchar, varchar
@UpdateLogging            	varchar
@ValidatePartitioning     	int, varbinary

--- User Procedures ------------------------------------------
EMPLOYEE.delete           	integer
EMPLOYEE.insert           	integer, varchar, varchar, varchar
EMPLOYEE.update           	integer, varchar, varchar, varchar, integer
EMPLOYEE.upsert           	integer, varchar, varchar, varchar


--- Potential Procedure Classes ------------------------------
 sqlcmdtest.BadSwap                       
 sqlcmdtest.BoxedInsertEmployee           
 sqlcmdtest.Breakable0                    
 sqlcmdtest.Breakable1                    
 sqlcmdtest.Breakable2                    
 sqlcmdtest.InsertEmployee                
 sqlcmdtest.Trivial                       
 sqlcmdtest.UsesUDF                       

--- Non-Procedure Classes ------------------------------------
 sqlcmdtest.Breakable0$NestedGetsSabotaged
 sqlcmdtest.Breakable1$NestedGetsKilled   
 sqlcmdtest.IntFunction                   
 sqlcmdtest.ReferencedGetsSabotaged       


--- User-defined Functions -----------------------------------


create procedure from class sqlcmdtest.UsesUDF;
Expect this function creation to succeed.

create function intrun from method sqlcmdtest.IntFunction.run;
Command succeeded.
Expect this procedure creation to succeed.

create procedure from class sqlcmdtest.UsesUDF;
Command succeeded.

drop function intrun;

--- User-defined Functions -----------------------------------
intrun              scalar function     sqlcmdtest.IntFunction.run                        

expect this to succeed, since the drop function failed.

exec UsesUDF;
C1 
---
 10
 10
 10
 10

(Returned 4 rows in #.##s)

--- User-defined Functions -----------------------------------
intrun              scalar function     sqlcmdtest.IntFunction.run                        

expect this to succeed as well.

select intrun(0) from EMPLOYEE;
C1 
---
 10
 10
 10
 10

(Returned 4 rows in #.##s)

drop procedure UsesUDF;
Command succeeded.

drop function intrun;
Command succeeded.

--- User-defined Functions -----------------------------------


--- Potential Procedure Classes ------------------------------
 sqlcmdtest.BadSwap                       
 sqlcmdtest.BoxedInsertEmployee           
 sqlcmdtest.Breakable0                    
 sqlcmdtest.Breakable1                    
 sqlcmdtest.Breakable2                    
 sqlcmdtest.InsertEmployee                
 sqlcmdtest.Trivial                       
 sqlcmdtest.UsesUDF                       

--- Non-Procedure Classes ------------------------------------
 sqlcmdtest.Breakable0$NestedGetsSabotaged
 sqlcmdtest.Breakable1$NestedGetsKilled   
 sqlcmdtest.IntFunction                   
 sqlcmdtest.ReferencedGetsSabotaged       


remove classes sqlcmdtest.InsertEmployee;
Command succeeded.

--- Potential Procedure Classes ------------------------------
 sqlcmdtest.BadSwap                       
 sqlcmdtest.BoxedInsertEmployee           
 sqlcmdtest.Breakable0                    
 sqlcmdtest.Breakable1                    
 sqlcmdtest.Breakable2                    
 sqlcmdtest.Trivial                       
 sqlcmdtest.UsesUDF                       

--- Non-Procedure Classes ------------------------------------
 sqlcmdtest.Breakable0$NestedGetsSabotaged
 sqlcmdtest.Breakable1$NestedGetsKilled   
 sqlcmdtest.IntFunction                   
 sqlcmdtest.ReferencedGetsSabotaged       


remove classes sqlcmdtest.*;
Command succeeded.

--- Empty Class List -----------------------------------------



drop table EMPLOYEE;
Command succeeded.
