#!/usr/bin/env python

# Use this script to turn on debug output in Calcite

import os
import shutil

APPENDER_CONTENT = """<?xml version="1.0" encoding="UTF-8"?>
<appender name="stdout" class="org.apache.log4j.ConsoleAppender">
    <layout class="org.apache.log4j.PatternLayout">
        <param name="ConversionPattern" value="%5p [%t] (%F:%L) - %m%n"/>
    </layout>
</appender>"""

LOGGER_CONTENT = """<?xml version="1.0" encoding="UTF-8"?>
<logger name="org.apache.calcite.plan.RelOptPlanner">
    <level value="TRACE"/>
    <appender-ref ref="stdout"/>
</logger>"""

TEST_LOGGER_CONTENT = """<?xml version="1.0" encoding="UTF-8" ?>
<logger name="org.apache.calcite.plan.RelOptPlanner">
    <level value="TRACE"/>
    <appender-ref ref="console"/>
</logger>"""

APPENDER_PATH = "../../voltdb/calcite-appender.xml"

LOGGER_PATH = "../../voltdb/calcite-logger.xml"

TEST_LOGGER_PATH = "../../tests/calcite-logger.xml"

JAR_PATH = "../../lib/slf4j-log4j12-1.6.2.jar"

if __name__ == "__main__":
    # update the log4j.xml for tests running in ide
    with open(os.path.join(os.path.dirname(__file__), APPENDER_PATH), 'w') as f:
        f.write(APPENDER_CONTENT)

    with open(os.path.join(os.path.dirname(__file__), LOGGER_PATH), 'w') as f:
        f.write(LOGGER_CONTENT)

    # update the log4j.xml for tests running in terminal
    with open(os.path.join(os.path.dirname(__file__), TEST_LOGGER_PATH), 'w') as f:
        f.write(TEST_LOGGER_CONTENT)

    # update the jar file
    shutil.move(os.path.join(os.path.dirname(__file__), "slf4j-log4j12-1.6.2.jar"),
                os.path.join(os.path.dirname(__file__), JAR_PATH))

    # update .classpath
    with open(os.path.join(os.path.dirname(__file__), '../../.classpath'), 'r') as f:
        classPathData = f.read()

    classPathData = classPathData.replace('slf4j-nop-1.6.2.jar', 'slf4j-log4j12-1.6.2.jar')

    with open(os.path.join(os.path.dirname(__file__), '../../.classpath'), 'w') as f:
        f.write(classPathData)

    print("Calcite debug output is on!")
