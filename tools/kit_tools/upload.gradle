apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'org.voltdb'

//Get the version string from the sources jar filename
def srcfilepath = new FileNameFinder().getFileNames ('.' , 'voltdbclient-*-sources.jar')[0]
def matcher = ( srcfilepath =~ /.*voltdbclient-(.*)-sources.jar$/)
version = matcher[0][1]
println version
description = 'VoltDB client interface libraries'
archivesBaseName = 'voltdbclient'

configurations {
  clientArchives
  serverArchives
  ascSignatures
}

artifacts {
  clientArchives file: file("voltdbclient-${version}.jar"), name:'voltdbclient',
                         classifier:null, type:'jar', extension:'jar'
  clientArchives file: file("voltdbclient-${version}-javadoc.jar"), name:'voltdbclient',
                         classifier:'javadoc', type:'jar', extension:'jar'
  clientArchives file: file("voltdbclient-${version}-sources.jar"), name:'voltdbclient',
                         classifier:'sources', type:'jar', extension:'jar'

  serverArchives file: file("voltdb-${version}.jar"), name:'voltdb',
                         classifier:null, type:'jar', extension:'jar'
  serverArchives file: file("voltdb-${version}-javadoc.jar"), name:'voltdb',
                         classifier:'javadoc', type:'jar', extension:'jar'
  serverArchives file: file("voltdb-${version}-sources.jar"), name:'voltdb',
                         classifier:'sources', type:'jar', extension:'jar'

}

signing {
  sign configurations.clientArchives
  sign configurations.serverArchives
}

task debug << {
  configurations.clientArchives.artifacts.each { ca ->
    println(['name','type','extension','classifier','file'].collect {
      "${it}: ${ca.$/${it}/$}"
    }.join(", "))
  }
}

task debugServer << {
  configurations.serverArchives.artifacts.each { ca ->
    println(['name','type','extension','classifier','file'].collect {
      "${it}: ${ca.$/${it}/$}"
    }.join(", "))
  }
}

uploadClientArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment mvnd ->
              signing.signPom(mvnd)
              configurations.clientArchives.artifacts.each { ca ->
                def ascfile = file(ca.file.path + '.asc')
                def ascartf = project.artifacts.add('ascSignatures', ascfile) {
                  classifier = ca.classifier
                  extension = ca.extension + '.asc'
                  type = ca.type + '.asc'
                }
                mvnd.addArtifact(ascartf)
              }
            }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
              authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
              authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
               name 'voltdbclient'
               packaging 'jar'
               description 'VoltDB client interface libraries'
               url 'http://www.voltdb.com/'

               scm {
                   url 'git@github.com:VoltDB/voltdb.git'
                   connection 'scm:git@github.com:VoltDB/voltdb.git'
                   developerConnection 'scm:git@github.com:VoltDB/voltdb.git'
               }

               licenses {
                   license {
                       name 'The MIT License'
                       url 'https://opensource.org/licenses/mit-license.php'
                       distribution 'repo'
                   }
               }

               developers {
                   developer {
                       id 'rmorgenstein'
                       name 'Ruth Morgenstein'
                       email 'rmorgenstein@voltdb.com'
                       organizationUrl 'http://www.voltdb.com'
                   }
               }

               dependencies {
                   runtime 'io.netty:netty-all:4.1.32.Final'
                   runtime 'io.netty:netty-tcnative-boringssl-static:2.0.20.Final'
               }
            }
            // Set all dependencies as optional
            pom.withXml {
                asNode().dependencies.dependency.findAll {
                    it.appendNode('optional').value = 'true'
                }
            }
        }
    }
}

uploadServerArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment mvnd ->
              signing.signPom(mvnd)
              configurations.serverArchives.artifacts.each { ca ->
                def ascfile = file(ca.file.path + '.asc')
                def ascartf = project.artifacts.add('ascSignatures', ascfile) {
                  classifier = ca.classifier
                  extension = ca.extension + '.asc'
                  type = ca.type + '.asc'
                }
                mvnd.addArtifact(ascartf)
              }
            }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
              authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
              authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
               name 'voltdb'
               packaging 'jar'
               description 'VoltDB server libraries'
               url 'http://www.voltdb.com/'

               scm {
                   url 'git@github.com:VoltDB/voltdb.git'
                   connection 'scm:git@github.com:VoltDB/voltdb.git'
                   developerConnection 'scm:git@github.com:VoltDB/voltdb.git'
               }

               licenses {
                   license {
                       name 'GNU Affero General Public License Version 3'
                       url 'http://www.gnu.org/licenses/agpl.txt'
                       distribution 'repo'
                   }
               }

               developers {
                   developer {
                       id 'rmorgenstein'
                       name 'Ruth Morgenstein'
                       email 'rmorgenstein@voltdb.com'
                       organizationUrl 'http://www.voltdb.com'
                   }
               }
            }
        }
    }
}

uploadClientArchives.dependsOn {
  [signClientArchives]
}

uploadServerArchives.dependsOn {
  [signServerArchives]
}

