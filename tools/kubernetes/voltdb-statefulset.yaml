apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  labels:
    app: --clusterName--
  name: --clusterName--
  namespace: default
spec:
  clusterIP: None
  ports:
  - name: vmc
    port: 8080
    protocol: TCP
    targetPort: 8080
  publishNotReadyAddresses: true
  selector:
    app: --clusterName--
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: --clusterName--
  namespace: default
spec:
  podManagementPolicy: Parallel
  replicas: --replicaCount--
  selector:
    matchLabels:
      app: --clusterName--
  serviceName: "--clusterName--"
  template:
    metadata:
      labels:
        app: --clusterName--
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - --clusterName--
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - command:
        - voltdbk8s.py
        - voltdb
        - start
        - -c
        - $(NODECOUNT)
        - $(VOLTDB_START_ARGS)
        envFrom:
        - configMapRef:
            name: --clusterName---run-env
        image: --containerImage---
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 60
          successThreshold: 1
          tcpSocket:
            port: intra-node
          timeoutSeconds: 1
        name: --clusterName--
        ports:
        - containerPort: 3021
          name: intra-node
          protocol: TCP
        - containerPort: 3022
          name: tls-intra-node
          protocol: TCP
        - containerPort: 21211
          name: external-admin
          protocol: TCP
        - containerPort: 21212
          name: external-client
          protocol: TCP
        - containerPort: 5555
          name: replication
          protocol: TCP
        - containerPort: 8080
          name: vmc
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - k8sreadycheck.py
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: --cpuCount--
            memory: --memorySize--
        volumeMounts:
        - mountPath: /voltdbroot
          name: voltdbroot
        - mountPath: /etc/voltdb
          name: voltdb-init-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: --clusterName---init-configmap
        name: voltdb-init-volume
  volumeClaimTemplates:
  - metadata:
      name: voltdbroot
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: --pvolumeSize--
