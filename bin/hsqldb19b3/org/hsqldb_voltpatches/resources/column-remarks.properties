# default column-remarks
# SYSTEM_ALLTYPEINFO
SYSTEM_ALLTYPEINFO_TYPE_NAME=the HSQLDB-specific data type name; this is the canonical name used in CREATE TABLE and ALTER TABLE statements.
SYSTEM_ALLTYPEINFO_DATA_TYPE=SQL data type.  This may be a java.sql.Types data type, a SQL 200n data type or an HSQLDB-specific data type.  For datetime or interval data types, this column returns the concise data type (such as SQL_­TYPE_­TIME or SQL_­INTERVAL_­YEAR_­TO_­MONTH).
SYSTEM_ALLTYPEINFO_PRECISION=The maximum column size for this data type.  For numeric data, this is the maximum precision.  For string data, this is the length in characters.  For datetime data types, this is the length in characters of the string representation (assuming the maximum allowed precision of the fractional seconds component).  NULL for data types where column size is not applicable.  For interval data types, this is the number of characters in the character representation of the interval literal (as defined by the interval leading precision).
SYSTEM_ALLTYPEINFO_LITERAL_PREFIX=the character or characters used to prefix a literal of this type; for example, a single quotation mark (') for character data types; NULL for data types where a literal prefix is not applicable
SYSTEM_ALLTYPEINFO_LITERAL_SUFFIX=the character or characters used to terminate a literal of this type; for example, a single quotation mark (') for character data types; NULL for data types where a literal suffix is not applicable
SYSTEM_ALLTYPEINFO_CREATE_PARAMS=A list of keywords, separated by commas, corresponding to each parameter that may be specified in parentheses when issuing DDL relative to the data type.  The keywords in the list, in the language of the current Locale, may be any of the following:  length, precision, scale.  They appear in the order that the syntax requires that they be used.  For example, CREATE_PARAMS for DECIMAL with an English locale would be "precision,scale"; CREATE_PARAMS for VARCHAR would be "length".  The value is NULL if there are no parameters for the data type definition; for example, INTEGER.
SYSTEM_ALLTYPEINFO_NULLABLE=NULL values allowed for this type?: { No Nulls | Nullable | Unknown }
SYSTEM_ALLTYPEINFO_CASE_SENSITIVE=TRUE if the type is case-sensitive in collations and comparisons; FALSE otherwise
SYSTEM_ALLTYPEINFO_SEARCHABLE=use of WHERE?: { None | Char (Only WHERE .. LIKE) | Basic (Except WHERE .. LIKE) | Searchable (All forms of WHERE...) }
SYSTEM_ALLTYPEINFO_UNSIGNED_ATTRIBUTE=TRUE if the data type is unsigned; NULL the attribute is not applicable to the data type or the data type is not numeric.
SYSTEM_ALLTYPEINFO_FIXED_PREC_SCALE=TRUE if the data type has predefined fixed precision and scale , like a money data type.  NULL for non-numeric types.
SYSTEM_ALLTYPEINFO_AUTO_INCREMENT=NULL if the attribute is not applicable to the data type or the data type is not numeric.  If TRUE, this indicates that when an insert is made, a unique value is inserted into the column at insert time. The increment is not defined. An application should not assume that auto-increment values start at any particular point or increment by any particular value.
SYSTEM_ALLTYPEINFO_LOCAL_TYPE_NAME=Localized version of the name of the data type; NULL if a localized name is not supported.  This name is intended for display only, such as in dialog boxes
SYSTEM_ALLTYPEINFO_MINIMUM_SCALE=minimum scale supported
SYSTEM_ALLTYPEINFO_MAXIMUM_SCALE=maximum scale supported
SYSTEM_ALLTYPEINFO_SQL_DATA_TYPE=The value of the SQL data type as it would appear in the SQL CLI SQL_DESC_TYPE field of the SQLDA.
SYSTEM_ALLTYPEINFO_SQL_DATETIME_SUB=When the value of SQL_DATA_TYPE is SQL_DATETIME or SQL_INTERVAL, this column contains the datetime/interval subcode.  For data types other than datetime and interval, this column is NULL.
SYSTEM_ALLTYPEINFO_NUM_PREC_RADIX=For numeric types, this column contains the value 10 to indicate that COLUMN_SIZE specifies a number of decimal digits.  Otherwise, this column is NULL.
SYSTEM_ALLTYPEINFO_INTERVAL_PRECISION=If the data type is an interval data type, then this column contains the value of the interval leading precision.  Otherwise, this column is NULL.
SYSTEM_ALLTYPEINFO_AS_TAB_COL=TRUE if the engine supports this data type as a table column, else FALSE
SYSTEM_ALLTYPEINFO_AS_PROC_COL=TRUE if the engine supports this data type as a procedure parameter or return type, else FALSE
SYSTEM_ALLTYPEINFO_MAX_PREC_ACT=same as PRECISION except for data types whose precision cannot be represented by an INTEGER column value
SYSTEM_ALLTYPEINFO_MIN_SCALE_ACT=same as MINIMUM_SCALE except for data types whose minimum scale cannot be represented by a SMALLINT column value
SYSTEM_ALLTYPEINFO_MAX_SCALE_ACT=same as MAXIMUM_SCALE except for data types whose maximum scale cannot be represented by a SMALLINT column value
SYSTEM_ALLTYPEINFO_COL_ST_CLS_NAME=the fully qualified name of the Java class that HSQLDB uses to represent values of this type in memory
SYSTEM_ALLTYPEINFO_COL_ST_IS_SUP=TRUE if the Java class that HSQLDB uses to represent values of this type in memory is supported under the hosting JVM and engine build options
SYSTEM_ALLTYPEINFO_STD_MAP_CLS_NAME=the fully qualified name of the Java class that the JDBC standard mapping uses to represent values of this type
SYSTEM_ALLTYPEINFO_STD_MAP_IS_SUP=TRUE if the Java class that the JDBC standard mapping uses to represent values of this type is supported under the current JVM
SYSTEM_ALLTYPEINFO_CST_MAP_CLS_NAME=the fully qualified name of the Java class that HSQLDB provides to represent values of this type via the JDBC interface
SYSTEM_ALLTYPEINFO_CST_MAP_IS_SUP=TRUE if the Java class that HSQLDB provides to represent values of this type via the JDBC interface is supported under the hosting JVM and engine build options
SYSTEM_ALLTYPEINFO_MCOL_JDBC=the maximum character octet length of this type if it is representable via the JDBC interface (i.e. as an INTEGER column value)
SYSTEM_ALLTYPEINFO_MCOL_ACT=same as MCOL_JDBC except for data types whose maximum character octet length cannot be represented by an INTEGER column value
SYSTEM_ALLTYPEINFO_DEF_OR_FIXED_SCALE=the default or fixed scale of numeric types; NULL if not applicable of the type is not numeric
SYSTEM_ALLTYPEINFO_REMARKS=a localized explanatory comment on the data type
SYSTEM_ALLTYPEINFO_TYPE_SUB=the variant tag for this variation of the data type.  1 = standard, 2 = identity, 4 = ignore case
# SYSTEM_BESTROWIDENTIFIER
SYSTEM_BESTROWIDENTIFIER_SCOPE=actual scope of result, as defined in java.sql.DatabaseMetadata
SYSTEM_BESTROWIDENTIFIER_COLUMN_NAME=simple column name
SYSTEM_BESTROWIDENTIFIER_DATA_TYPE=SQL data type.  This may be a java.sql.Types data type, a SQL 200n data type or an HSQLDB-specific data type.  For datetime or interval data types, this column returns the concise data type (such as SQL_­TYPE_­TIME or SQL_­INTERVAL_­YEAR_­TO_­MONTH).
SYSTEM_BESTROWIDENTIFIER_TYPE_NAME=the HSQLDB-specific data type name; this is the canonical name used in CREATE TABLE and ALTER TABLE statements.
SYSTEM_BESTROWIDENTIFIER_COLUMN_SIZE=precision for number types; length for variable sized types; NULL for others
SYSTEM_BESTROWIDENTIFIER_BUFFER_LENGTH=The maximum length in bytes of data, if definitely known, that would be transferred to a buffer on a fetch operation.  For numeric data, this size may be different than the size of the data stored on the data source.  This value is the same as the COLUMN_SIZE column for binary data. This value is the twice the COLUMN_SIZE column for character data.  If the actual value is larger than can be represented in an INTEGER column value, this is NULL.
SYSTEM_BESTROWIDENTIFIER_DECIMAL_DIGITS=scale of column for number types
SYSTEM_BESTROWIDENTIFIER_PSEUDO_COLUMN=is this a pseudo column like an Oracle ROWID?
SYSTEM_BESTROWIDENTIFIER_TABLE_CAT=catalog in which the table containing the column is defined
SYSTEM_BESTROWIDENTIFIER_TABLE_SCHEM=schema in which the table containing the column is defined
SYSTEM_BESTROWIDENTIFIER_TABLE_NAME=simple name of the table containing the column
SYSTEM_BESTROWIDENTIFIER_NULLABLE=is the column nullable?
SYSTEM_BESTROWIDENTIFIER_IN_KEY=does column participate in primary or alternate key?
# SYSTEM_CACHEINFO
#SYSTEM_CACHEINFO_CACHE_CLASS=FQN of the Java Class implementing the cache
#SYSTEM_CACHEINFO_CACHE_HASH=the in-memory hashCode() of the Cache object
SYSTEM_CACHEINFO_CACHE_FILE=absolute path of the file underlying the cache object
#SYSTEM_CACHEINFO_CACHE_LENGTH=length of the cache object's row data array
SYSTEM_CACHEINFO_MAX_CACHE_COUNT=maximum number of rows that will be buffered in memory by this cache
SYSTEM_CACHEINFO_MAX_CACHE_BYTES=approximate maximum size, in bytes, of row data that will be buffered in memory by this cache
SYSTEM_CACHEINFO_CACHE_SIZE=number of rows currently cached
SYSTEM_CACHEINFO_CACHE_BYTES=approximate number of row data bytes currently cached
SYSTEM_CACHEINFO_FILE_FREE_BYTES=aggregate size, in octets, of all allocation units considered available for reuse
#SYSTEM_CACHEINFO_SMALLEST_FREE_ITEM=size, in octets, of smallest allocation unit available for reuse
#SYSTEM_CACHEINFO_LARGEST_FREE_ITEM=size, in octets, of largest allocation unit available for reuse
SYSTEM_CACHEINFO_FILE_FREE_COUNT=number of allocation units available for reuse
SYSTEM_CACHEINFO_FILE_FREE_POS=one greater than largest file position known to be allocated
#SYSTEM_CACHEINFO_MAX_CACHE_SIZE=maximum allowable number of cached Row objects
#SYSTEM_CACHEINFO_MAX_CACHE_BYTE_SIZE=limit on memory consumption of cached Row objects
#SYSTEM_CACHEINFO_MULTIPLIER_MASK=binary mask used to calculate indices into row data array
#SYSTEM_CACHEINFO_WRITER_LENGTH=length of row write buffer array
# INFORMATION_SCHEMA_CATALOG_NAME
INFORMATION_SCHEMA_CATALOG_NAME_CATALOG_NAME=catalog name
# SYSTEM_COLUMNPRIVILEGES
SYSTEM_COLUMNPRIVILEGES_TABLE_CAT=catalog in which the table containing the column is defined
SYSTEM_COLUMNPRIVILEGES_TABLE_SCHEM=schema in which the table containing the column is defined
SYSTEM_COLUMNPRIVILEGES_TABLE_NAME=simple name of the table containing the column is defined
SYSTEM_COLUMNPRIVILEGES_COLUMN_NAME=simple name of the column
SYSTEM_COLUMNPRIVILEGES_GRANTOR=grantor of access
SYSTEM_COLUMNPRIVILEGES_GRANTEE=grantee of access
SYSTEM_COLUMNPRIVILEGES_PRIVILEGE=name of access, e.g. one of { ALL, SELECT, INSERT, UPDATE, DELETE, ...}
SYSTEM_COLUMNPRIVILEGES_IS_GRANTABLE=grantable?: YES - may grant to others, NO - not permitted to grant to others, NULL - unknown
# SYSTEM_COLUMNS
SYSTEM_COLUMNS_TABLE_CAT=catalog in which the table containing the column is defined
SYSTEM_COLUMNS_TABLE_SCHEM=schema in which the table containing the column is defined
SYSTEM_COLUMNS_TABLE_NAME=simple name of the table containing the column
SYSTEM_COLUMNS_COLUMN_NAME=simple name of the column
SYSTEM_COLUMNS_DATA_TYPE=SQL data type.  This may be a java.sql.Types data type, a SQL 200n data type or an HSQLDB-specific data type.  For datetime or interval data types, this column returns the concise data type (such as SQL_­TYPE_­TIME or SQL_­INTERVAL_­YEAR_­TO_­MONTH).
SYSTEM_COLUMNS_TYPE_NAME=the HSQLDB-specific data type name; this is the canonical name used in CREATE TABLE and ALTER TABLE statements.
SYSTEM_COLUMNS_COLUMN_SIZE=precision for number types; length for sized types; NULL if not applicable
SYSTEM_COLUMNS_BUFFER_LENGTH=The maximum length in bytes of data, if definitely known, that would be transferred to a buffer on a fetch operation.  For numeric data, this size may be different than the size of the data stored on the data source.  This value is the same as the COLUMN_SIZE column for binary data. This value is the twice the COLUMN_SIZE column for character data.  If the actual value is larger than can be represented in an INTEGER column value, this is NULL.
SYSTEM_COLUMNS_DECIMAL_DIGITS=# of fractional digits (scale) for number types
SYSTEM_COLUMNS_NUM_PREC_RADIX=Radix of reported numeric precision (i.e. base of number types)
SYSTEM_COLUMNS_NULLABLE=is NULL allowed?: { columnNoNulls (maybe not), columnNullable (definitely), columnNullableUnknown }
SYSTEM_COLUMNS_REMARKS=explanitory comment describing the column (may be NULL)
SYSTEM_COLUMNS_COLUMN_DEF=default value (may be NULL)
SYSTEM_COLUMNS_SQL_DATA_TYPE=The value of the SQL data type as it would appear in the SQL CLI SQL_DESC_TYPE field of the SQLDA.
SYSTEM_COLUMNS_SQL_DATETIME_SUB=When the value of SQL_DATA_TYPE is SQL_DATETIME or SQL_INTERVAL, this column contains the datetime/interval subcode.  For data types other than datetime and interval, this column is NULL.
SYSTEM_COLUMNS_CHAR_OCTET_LENGTH=for char types, the maximum number of bytes in the column, if the value can be represented as an INTEGER column value, else NULL
SYSTEM_COLUMNS_ORDINAL_POSITION=index of column in table (starting at 1)
SYSTEM_COLUMNS_IS_NULLABLE=is column nullable?: { YES (might allow) | NO (definitely not)  | '' (unknown) }
SYSTEM_COLUMNS_SCOPE_CATLOG=catalog of table that is the scope of a reference attribute (NULL if DATA_TYPE isn't REF)
SYSTEM_COLUMNS_SCOPE_SCHEMA=schema of table that is the scope of a reference attribute (NULL if the DATA_TYPE isn't REF)
SYSTEM_COLUMNS_SCOPE_TABLE=table name that this the scope of a reference attribute (NULL if the DATA_TYPE isn't REF)
SYSTEM_COLUMNS_SOURCE_DATA_TYPE=source type of a distinct type or user-generated Ref type, SQL type from DITypes (NULL if DATA_TYPE isn't DISTINCT or user-generated REF)
SYSTEM_COLUMNS_TYPE_SUB=the HSQLDB-specific type subidentifier (1:default, 2:identity, 4:ignorecase)
# SYSTEM_CROSSREFERENCE
SYSTEM_CROSSREFERENCE_PKTABLE_CAT=the catalog in which the referenced table is defined
SYSTEM_CROSSREFERENCE_PKTABLE_SCHEM=the schema in which the referenced table is defined
SYSTEM_CROSSREFERENCE_PKTABLE_NAME=simple name of the referenced table
SYSTEM_CROSSREFERENCE_PKCOLUMN_NAME=simple name of the referenced column
SYSTEM_CROSSREFERENCE_FKTABLE_CAT=the catalog in which the referencing table is defined
SYSTEM_CROSSREFERENCE_FKTABLE_SCHEM=the schema in which the referencing table is defined
SYSTEM_CROSSREFERENCE_FKTABLE_NAME=the simple name of the referencing table
SYSTEM_CROSSREFERENCE_FKCOLUMN_NAME=the simple name of the referencing column
SYSTEM_CROSSREFERENCE_KEY_SEQ=sequence number within foreign key definition
SYSTEM_CROSSREFERENCE_UPDATE_RULE=how does an update of referenced row columns affect referencing rows?: e.g. { Cascade | Set Null | Set Default | Restrict (No Action) }
SYSTEM_CROSSREFERENCE_DELETE_RULE=how does deletion of a referenced row affect referencing rows?: e.g. { Cascade | Set Null | Set Default | Restrict (No Action) }
SYSTEM_CROSSREFERENCE_FK_NAME=the name of the foreign key
SYSTEM_CROSSREFERENCE_PK_NAME=the name of the referenced column set (usually the name of a primary key constraint, but may be a unique constraint or even the name of a non-unique index previous to 1.7.0)
SYSTEM_CROSSREFERENCE_DEFERRABILITY=foreign key constraints deferred until commit?: e.g. { initially deferred | initially immediate | not deferrable }
# SYSTEM_INDEXINFO
SYSTEM_INDEXINFO_TABLE_CAT=catalog in which the table using the index is defined
SYSTEM_INDEXINFO_TABLE_SCHEM=schema in which the table using the index is defined
SYSTEM_INDEXINFO_TABLE_NAME=simple name of the table using the index
SYSTEM_INDEXINFO_NON_UNIQUE=can index values be non-unique?
SYSTEM_INDEXINFO_INDEX_QUALIFIER=catalog in which the index is defined
SYSTEM_INDEXINFO_INDEX_NAME=simple name of the index
SYSTEM_INDEXINFO_TYPE=index type: e.g. { Clustered | Hashed | Other }
SYSTEM_INDEXINFO_ORDINAL_POSITION=column sequence number within index
SYSTEM_INDEXINFO_COLUMN_NAME=simple column name
SYSTEM_INDEXINFO_ASC_OR_DESC=column sort sequence: e.g. { "A" (Ascending) | "D" (Descending) }
SYSTEM_INDEXINFO_CARDINALITY=index cardinality: # of unique values in the index (currently unused)
SYSTEM_INDEXINFO_PAGES=index page use (currently unused)
SYSTEM_INDEXINFO_FILTER_CONDITION=filter condition, if any (currently unused)
# SYSTEM_LOBS
SYSTEM_LOBS_NAME=Java classfile encoded absolute name of a resource ( /dir1/.../dirn/resourcename.ext)
SYSTEM_LOBS_CONTENT=binary content of Java class file or resource
SYSTEM_LOBS_CONTENT_TYPE=content type (possibly a mime-type value)
SYSTEM_LOBS_MD5=MD5 hash of content (efficiently detects and avoids attempts to reload identical content)
SYSTEM_LOBS_CREATED=time at which content was initially loaded
SYSTEM_LOBS_MODIFIED=time at which content was last modified
# SYSTEM_PRIMARYKEYS
SYSTEM_PRIMARYKEYS_TABLE_CAT=catalog in which table containing primary key is defined
SYSTEM_PRIMARYKEYS_TABLE_SCHEM=schema in which table containing primary key is defined
SYSTEM_PRIMARYKEYS_TABLE_NAME=simple name of table containing primary key
SYSTEM_PRIMARYKEYS_COLUMN_NAME=simple name of column participating in primary key
SYSTEM_PRIMARYKEYS_KEY_SEQ=sequence number of column within primary key
SYSTEM_PRIMARYKEYS_PK_NAME=primary key name
# SYSTEM_PROCEDURECOLUMNS
SYSTEM_PROCEDURECOLUMNS_PROCEDURE_CAT=catalog in which procedure is defined
SYSTEM_PROCEDURECOLUMNS_PROCEDURE_SCHEM=schema in which procedure is defined
SYSTEM_PROCEDURECOLUMNS_PROCEDURE_NAME=procedure identifier
SYSTEM_PROCEDURECOLUMNS_COLUMN_NAME=( result column | call parameter | return value ) name
SYSTEM_PROCEDURECOLUMNS_COLUMN_TYPE=kind of column/parameter: { Unknown | IN | INOUT | OUT | RETURN | RESULT }
SYSTEM_PROCEDURECOLUMNS_DATA_TYPE=SQL data type.  This may be a java.sql.Types data type, a SQL 200n data type or an HSQLDB-specific data type.  For datetime or interval data types, this column returns the concise data type (such as SQL_­TYPE_­TIME or SQL_­INTERVAL_­YEAR_­TO_­MONTH).
SYSTEM_PROCEDURECOLUMNS_TYPE_NAME=the HSQLDB-specific data type name; for data types supported as table column types, this is the canonical name used in CREATE TABLE and ALTER TABLE statements.
SYSTEM_PROCEDURECOLUMNS_PRECISION=precision for number types; max length for sized types; fixed or max length for others if known, or NULL if not applicable
SYSTEM_PROCEDURECOLUMNS_LENGTH=The maximum length in bytes of data, if definitely known, that would be transferred to a buffer on a fetch operation.  For numeric data, this size may be different than the size of the data stored on the data source.  This value is the same as the COLUMN_SIZE column for binary data. This value is the twice the COLUMN_SIZE column for character data.  If the actual value is unknown or is larger than can be represented in an INTEGER column value, this is NULL.
SYSTEM_PROCEDURECOLUMNS_SCALE=scale (# of fractional digits) for number types
SYSTEM_PROCEDURECOLUMNS_RADIX=Radix of reported numeric precision (i.e. base of number types)
SYSTEM_PROCEDURECOLUMNS_NULLABLE=can column contain NULL: { No Nulls | Nullable | Unknown }?
SYSTEM_PROCEDURECOLUMNS_REMARKS=comment describing parameter or result column
SYSTEM_PROCEDURECOLUMNS_SPECIFIC_NAME=typically, (but not limited to) the fully qualified name and signature of the Java method providing the SQL-invoked routine's entry point
SYSTEM_PROCEDURECOLUMNS_SEQ=provides the ability to deliver rows in JDBC DataseMetaData sort contrct order
# SYSTEM_PROCEDURES
SYSTEM_PROCEDURES_PROCEDURE_CAT=catalog in which procedure is defined
SYSTEM_PROCEDURES_PROCEDURE_SCHEM=schema in which procedure is defined
SYSTEM_PROCEDURES_PROCEDURE_NAME=procedure identifier
SYSTEM_PROCEDURES_REMARKS=explanatory comment on the procedure
SYSTEM_PROCEDURES_PROCEDURE_TYPE=kind of procedure: { Unknown | No Result | Returns Result }
SYSTEM_PROCEDURES_NUM_INPUT_PARAMS=number of procedure input parameters
SYSTEM_PROCEDURES_NUM_OUTPUT_PARAMS=number of procedure output parameters
SYSTEM_PROCEDURES_NUM_RESULT_SETS=number of result sets returned by procedure (if any)
SYSTEM_PROCEDURES_ORIGIN=how was named procedure introduced to system?: e.g. { BUILTIN | USER CLASS GRANT | ALIAS | TRIGGER | MODULE | ...}
SYSTEM_PROCEDURES_SPECIFIC_NAME=typically, (but not limited to) the fully qualified name and signature of the Java method providing the SQL-invoked routine's entry point
# SYSTEM_PROPERTIES
SYSTEM_PROPERTIES_PROPERTY_SCOPE=the scope of the property, e.g. ( TEMPORARY | TRANSACTION | SESSION | ...}
SYSTEM_PROPERTIES_PROPERTY_NAMESPACE=the namespace in which the property is applicable, e.g. ( database.properties | org.hsqldb.Database | java.sql.DatabaseMetaData | ...)
SYSTEM_PROPERTIES_PROPERTY_NAME=the name of the property
SYSTEM_PROPERTIES_PROPERTY_VALUE=the current value of the property
SYSTEM_PROPERTIES_PROPERTY_CLASS=the type of the value, e.g. ( int | boolean | java.lang.String | ...)
# SYSTEM_SCHEMAS
SYSTEM_SCHEMAS_TABLE_SCHEM=schema name
SYSTEM_SCHEMAS_TABLE_CATALOG=catalog in which schema is defined
SYSTEM_SCHEMAS_IS_DEFAULT=whether the described schema is the default schema
# SYSTEM_SESSIONS
SYSTEM_SESSIONS_SESSION_ID=session identifier
SYSTEM_SESSIONS_CONNECTED=time at which session connected to database
SYSTEM_SESSIONS_USER_NAME=name of session user, as known to the database
SYSTEM_SESSIONS_IS_ADMIN=is session user an admin user?
SYSTEM_SESSIONS_AUTOCOMMIT=is session in autocommit mode?
SYSTEM_SESSIONS_READONLY=is session in read-only mode?
SYSTEM_SESSIONS_MAXROWS=what is the session's MAXROWS setting?
SYSTEM_SESSIONS_LAST_IDENTITY=what is the last identity value used by this session?
SYSTEM_SESSIONS_TRANSACTION_SIZE=how many undo items are there in this session's transaction buffer?
#since 1.8.0
SYSTEM_SESSIONS_SCHEMA=this session's current default schema
# SYSTEM_SESSIONINFO
SYSTEM_SESSIONINFO_KEY=KEY: { SESSION_ID | AUTOCOMMIT | USER | CONNECTION_READONLY | DATABASE_READONLY | MAXROWS | DATABASE | IDENTITY ... }
SYSTEM_SESSIONINFO_VALUE=VALUE: the value corresponding to the indicated key (see JavaDocs)
# SYSTEM_TABLEPRIVILEGES
SYSTEM_TABLEPRIVILEGES_TABLE_CAT=table catalog
SYSTEM_TABLEPRIVILEGES_TABLE_SCHEM=table schema
SYSTEM_TABLEPRIVILEGES_TABLE_NAME=table name
SYSTEM_TABLEPRIVILEGES_GRANTOR=grantor of access
SYSTEM_TABLEPRIVILEGES_GRANTEE=grantee of access
SYSTEM_TABLEPRIVILEGES_PRIVILEGE=name of access: e.g. one of { ALL | SELECT | INSERT | UPDATE | DELETE }
SYSTEM_TABLEPRIVILEGES_IS_GRANTABLE=for grantee: YES - may grant to others, NO - may not grant to others, NULL - unknown
# SYSTEM_TABLES
SYSTEM_TABLES_TABLE_CAT=table catalog
SYSTEM_TABLES_TABLE_SCHEM=table schema
SYSTEM_TABLES_TABLE_NAME=table name
SYSTEM_TABLES_TABLE_TYPE=table type: e.g. one of { TABLE | VIEW | SYSTEM TABLE | GLOBAL TEMPORARY ... }
SYSTEM_TABLES_REMARKS=explanatory comment on the table
SYSTEM_TABLES_TYPE_CAT=table type catalog
SYSTEM_TABLES_TYPE_SCHEM=table type schema
SYSTEM_TABLES_TYPE_NAME=table type name
SYSTEM_TABLES_SELF_REFERENCING_COL_NAME=name of the designated "identifier" column of typed table (null if not typed)
SYSTEM_TABLES_REF_GENERATION=how are values in SELF_REFERENCING_COL_NAME created?: e.g. one of { "SYSTEM" | "USER" | "DERIVED" | NULL }
SYSTEM_TABLES_HSQLDB_TYPE=the HSQLDB-specific type of the table, e.g. ( MEMORY | CACHED | TEXT | ...)
SYSTEM_TABLES_READ_ONLY=TRUE if the table is read-only, else FALSE
# SYSTEM_TABLETYPES
SYSTEM_TABLETYPES_TABLE_TYPE=table type name
# SYSTEM_TEXTTABLES
SYSTEM_TEXTTABLES_TABLE_CAT=table catalog
SYSTEM_TEXTTABLES_TABLE_SCHEM=table schema
SYSTEM_TEXTTABLES_TABLE_NAME=table name
SYSTEM_TEXTTABLES_DATA_SOURCE_DEFINTION=the "spec" proption of the table's SET TABLE ... SOURCE DDL declaration
SYSTEM_TEXTTABLES_FILE_PATH=path to table's text file data source
SYSTEM_TEXTTABLES_FILE_ENCODING=encoding of table's text file data source
SYSTEM_TEXTTABLES_FIELD_SEPARATOR=the default field separator
SYSTEM_TEXTTABLES_VARCHAR_SEPARATOR=varchar field separator
SYSTEM_TEXTTABLES_LONGVARCHAR_SEPARATOR=longvarchar field separator
SYSTEM_TEXTTABLES_IS_IGNORE_FIRST=ignores first line of file?
# added to reflect 1.7.2 RC1
SYSTEM_TEXTTABLES_IS_QUOTED=fields are quoted if necessary?
#--
SYSTEM_TEXTTABLES_IS_ALL_QUOTED=every field is quoted?
SYSTEM_TEXTTABLES_IS_DESC=read rows starting at end of file?
# SYSTEM_TYPEINFO
SYSTEM_TYPEINFO_TYPE_NAME=the HSQLDB-specific data type name; this is the canonical name used in CREATE TABLE and ALTER TABLE statements.
SYSTEM_TYPEINFO_DATA_TYPE=SQL data type.  This may be a java.sql.Types data type, a SQL 200n data type or an HSQLDB-specific data type.  For datetime or interval data types, this column returns the concise data type (such as SQL_­TYPE_­TIME or SQL_­INTERVAL_­YEAR_­TO_­MONTH).
SYSTEM_TYPEINFO_PRECISION=The maximum column size for this data type.  For numeric data, this is the maximum precision.  For string data, this is the length in characters.  For datetime data types, this is the length in characters of the string representation (assuming the maximum allowed precision of the fractional seconds component).  NULL for data types where column size is not applicable.  For interval data types, this is the number of characters in the character representation of the interval literal (as defined by the interval leading precision).
SYSTEM_TYPEINFO_LITERAL_PREFIX=the character or characters used to prefix a literal of this type; for example, a single quotation mark (') for character data types; NULL for data types where a literal prefix is not applicable
SYSTEM_TYPEINFO_LITERAL_SUFFIX=the character or characters used to terminate a literal of this type; for example, a single quotation mark (') for character data types; NULL for data types where a literal suffix is not applicable
SYSTEM_TYPEINFO_CREATE_PARAMS=A list of keywords, separated by commas, corresponding to each parameter that may be specified in parentheses when issuing DDL relative to the data type.  The keywords in the list, in the language of the current Locale, may be any of the following:  length, precision, scale.  They appear in the order that the syntax requires that they be used.  For example, CREATE_PARAMS for DECIMAL with an English locale would be "precision,scale"; CREATE_PARAMS for VARCHAR would be "length".  The value is NULL if there are no parameters for the data type definition; for example, INTEGER.
SYSTEM_TYPEINFO_NULLABLE=NULL values allowed for this type?: { No Nulls | Nullable | Unknown }
SYSTEM_TYPEINFO_CASE_SENSITIVE=TRUE if the type is case-sensitive in collations and comparisons; FALSE otherwise
SYSTEM_TYPEINFO_SEARCHABLE=use of WHERE?: { None | Char (Only WHERE .. LIKE) | Basic (Except WHERE .. LIKE) | Searchable (All forms of WHERE...) }
SYSTEM_TYPEINFO_UNSIGNED_ATTRIBUTE=TRUE if the data type is unsigned; NULL the attribute is not applicable to the data type or the data type is not numeric.
SYSTEM_TYPEINFO_FIXED_PREC_SCALE=TRUE if the data type has predefined fixed precision and scale , like a money data type.  NULL for non-numeric types.
SYSTEM_TYPEINFO_AUTO_INCREMENT=NULL if the attribute is not applicable to the data type or the data type is not numeric.  If TRUE, this indicates that when an insert is made, a unique value is inserted into the column at insert time. The increment is not defined. An application should not assume that auto-increment values start at any particular point or increment by any particular value.
SYSTEM_TYPEINFO_LOCAL_TYPE_NAME=Localized version of the name of the data type; NULL if a localized name is not supported.  This name is intended for display only, such as in dialog boxes
SYSTEM_TYPEINFO_MINIMUM_SCALE=minimum scale supported
SYSTEM_TYPEINFO_MAXIMUM_SCALE=maximum scale supported
SYSTEM_TYPEINFO_SQL_DATA_TYPE=The value of the SQL data type as it would appear in the SQL CLI SQL_DESC_TYPE field of the SQLDA.
SYSTEM_TYPEINFO_SQL_DATETIME_SUB=When the value of SQL_DATA_TYPE is SQL_DATETIME or SQL_INTERVAL, this column contains the datetime/interval subcode.  For data types other than datetime and interval, this column is NULL.
SYSTEM_TYPEINFO_NUM_PREC_RADIX=For numeric types, this column contains the value 10 to indicate that COLUMN_SIZE specifies a number of decimal digits.  Otherwise, this column is NULL.
SYSTEM_TYPEINFO_TYPE_SUB=the variant tag for this variation of the data type.  1 = standard, 2 = identity, 4 = ignore case
# SYSTEM_UDTS
SYSTEM_UDTS_TYPE_CAT=type's catalog
SYSTEM_UDTS_TYPE_SCHEM=type's schema
SYSTEM_UDTS_TYPE_NAME=type's DBMS name
SYSTEM_UDTS_CLASS_NAME=type's Java class name
SYSTEM_UDTS_DATA_TYPE=type value defined in DITypes, from one of { "JAVA_OBJECT" | "STRUCT" | "DISTINCT" }
SYSTEM_UDTS_BASE_TYPE=type code of the source type of a DISTINCT type or the type that implements the user-generated reference type of the SELF_REFERENCING_COLUMN of a structured type as defined in DITypes (null if DATA_TYPE is not DISTINCT or not STRUCT with REFERENCE_GENERATION = USER_DEFINED)
SYSTEM_UDTS_REMARKS=explanatory comment on the user defined type
# SYSTEM_USERS
SYSTEM_USERS_USER=user name
SYSTEM_USERS_ADMIN=has the administrative privilege?
SYSTEM_USERS_INITIAL_SCHEMA=initial schema for user
# SYSTEM_VERSIONCOLUMNS
SYSTEM_VERSIONCOLUMNS_TABLE_CAT=table catalog
SYSTEM_VERSIONCOLUMNS_TABLE_SCHEM=table schema
SYSTEM_VERSIONCOLUMNS_TABLE_NAME=simple table name
SYSTEM_VERSIONCOLUMNS_SCOPE=not used
SYSTEM_VERSIONCOLUMNS_COLUMN_NAME=column name
SYSTEM_VERSIONCOLUMNS_DATA_TYPE=SQL data type from DITypes
SYSTEM_VERSIONCOLUMNS_TYPE_NAME=Data source dependent type name
SYSTEM_VERSIONCOLUMNS_COLUMN_SIZE=precision
SYSTEM_VERSIONCOLUMNS_BUFFER_LENGTH=length of column value in bytes
SYSTEM_VERSIONCOLUMNS_DECIMAL_DIGITS=scale
SYSTEM_VERSIONCOLUMNS_PSEUDO_COLUMN=is this a pseudo column like an Oracle ROWID: { Unknown | Not Pseudo | Pseudo }?
# SYSTEM_VIEWS
SYSTEM_VIEWS_TABLE_CATALOG=name of catalog in which view is defined
SYSTEM_VIEWS_TABLE_SCHEMA=unqualified name of schema in which view is defined
SYSTEM_VIEWS_TABLE_NAME=simple name of view
SYSTEM_VIEWS_VIEW_DEFINITION=the character representation of the query expression contained in the corresponding view descriptor.
SYSTEM_VIEWS_CHECK_OPTION={"CASCADED" | "LOCAL" | "NONE"}
SYSTEM_VIEWS_IS_UPDATABLE={"YES" | "NO"}
SYSTEM_VIEWS_VALID={TRUE | FALSE}
# Since 1.7.2 RC1
# SYSTEM_CHECK_COLUMN_USAGE
SYSTEM_CHECK_COLUMN_USAGE_CONSTRAINT_CATALOG=constraint catalog name
SYSTEM_CHECK_COLUMN_USAGE_CONSTRAINT_SCHEMA=constraint schema name
SYSTEM_CHECK_COLUMN_USAGE_CONSTRAINT_NAME=constraint identifier
SYSTEM_CHECK_COLUMN_USAGE_TABLE_CATALOG=table catalog name
SYSTEM_CHECK_COLUMN_USAGE_TABLE_SCHEMA= table schema name
SYSTEM_CHECK_COLUMN_USAGE_TABLE_NAME=table name
SYSTEM_CHECK_COLUMN_USAGE_COLUMN_NAME=name of column referenced explicitly or implicitly as contained in the <search condition> of the constraint being described.
# SYSTEM_CHECK_CONSTRAINTS
SYSTEM_CHECK_CONSTRAINTS_CONSTRAINT_CATALOG=constraint catalog name
SYSTEM_CHECK_CONSTRAINTS_CONSTRAINT_SCHEMA=constraint schema name
SYSTEM_CHECK_CONSTRAINTS_CONSTRAINT_NAME=constraint identifier
SYSTEM_CHECK_CONSTRAINTS_CHECK_CLAUSE=the character representation of the <search condition> contained in the <check constraint definition>, <domain constraint definition>, or <assertion definition> that defined the check constraint being described, or NULL if it cannot be described without truncation
# SYSTEM_CHECK_ROUTINE_USAGE
SYSTEM_CHECK_ROUTINE_USAGE_CONSTRAINT_CATALOG=constraint catalog name
SYSTEM_CHECK_ROUTINE_USAGE_CONSTRAINT_SCHEMA=constraint schema name
SYSTEM_CHECK_ROUTINE_USAGE_CONSTRAINT_NAME=constraint identifier
SYSTEM_CHECK_ROUTINE_USAGE_SPECIFIC_CATALOG=catalog name of specific name of routine
SYSTEM_CHECK_ROUTINE_USAGE_SPECIFIC_SCHEMA=schema name of specific name of routine
SYSTEM_CHECK_ROUTINE_USAGE_SPECIFIC_NAME=specific name of SQL-invoked routine identified as the subject routine of either a <routine invocation>, a <method reference>, a <method invocation>, or a <static method invocation> contained in the <assertion definition> or in the <check constraint definition> contained in either a <domain constraint> or a <table constraint definition>
# CONSTRAINT_TABLE_USAGE
CONSTRAINT_TABLE_USAGE_TABLE_CATALOG=table catalog name
CONSTRAINT_TABLE_USAGE_TABLE_SCHEMA=table schema name
CONSTRAINT_TABLE_USAGE_TABLE_NAME=name of a table identified by a <table name> simply contained in a <table reference> contained in the lt;search condition> of the constraint being described.
CONSTRAINT_TABLE_USAGE_CONSTRAINT_CATALOG=constraint catalog name
CONSTRAINT_TABLE_USAGE_CONSTRAINT_SCHEMA=constraint schema name
CONSTRAINT_TABLE_USAGE_CONSTRAINT_NAME=constraint identifier
# SYSTEM_SEQUENCES
SYSTEM_SEQUENCES_SEQUENCE_CATALOG=sequence catalog name
SYSTEM_SEQUENCES_SEQUENCE_SCHEMA=sequence schema name
SYSTEM_SEQUENCES_SEQUENCE_NAME=sequence identifier
SYSTEM_SEQUENCES_DTD_IDENTIFIER=implementation dependent data type descriptor identifier
SYSTEM_SEQUENCES_MAXIMUM_VALUE=sequence maximum value
SYSTEM_SEQUENCES_MINIMUM_VALUE=sequence minimum value
SYSTEM_SEQUENCES_INCREMENT=sequence increment
SYSTEM_SEQUENCES_CYCLE_OPTION=sequence cycle option ('YES' | 'NO')
SYSTEM_SEQUENCES_START_WITH=sequence start with value
# SYSTEM_TABLE_CONSTRAINTS
SYSTEM_TABLE_CONSTRAINTS_CONSTRAINT_CATALOG=constraint catalog name
SYSTEM_TABLE_CONSTRAINTS_CONSTRAINT_SCHEMA=constraint schema name
SYSTEM_TABLE_CONSTRAINTS_CONSTRAINT_NAME=constraint identifier
SYSTEM_TABLE_CONSTRAINTS_CONSTRAINT_TYPE=('UNIQUE' | 'PRIMARY KEY' | 'FOREIGN KEY' | 'CHECK')
SYSTEM_TABLE_CONSTRAINTS_TABLE_CATALOG=table catalog name
SYSTEM_TABLE_CONSTRAINTS_TABLE_SCHEMA=table schema name
SYSTEM_TABLE_CONSTRAINTS_TABLE_NAME=table identifier
SYSTEM_TABLE_CONSTRAINTS_IS_DEFERRABLE=('YES' | 'NO')
SYSTEM_TABLE_CONSTRAINTS_INITIALLY_DEFERRED=('YES' | 'NO')
# SYSTEM_USAGE_PRIVILEGES
SYSTEM_USAGE_PRIVILEGES_GRANTOR=<authorization identifier> of the user or role who granted usage privileges on the object
SYSTEM_USAGE_PRIVILEGES_GRANTEE=<authorization identifier> of some user or role, or ?PUBLIC? to indicate all users, to whom the usage privilege being described is granted
SYSTEM_USAGE_PRIVILEGES_OBJECT_CATALOG=object catalog name
SYSTEM_USAGE_PRIVILEGES_OBJECT_SCHEMA=object catalog schema
SYSTEM_USAGE_PRIVILEGES_OBJECT_NAME=identifier of the object to which the privilege applies
SYSTEM_USAGE_PRIVILEGES_OBJECT_TYPE=(DOMAIN' | 'CHARACTER SET' | 'COLLATION' | 'TRANSLATION' | 'SEQUENCE')
SYSTEM_USAGE_PRIVILEGES_IS_GRANTABLE=('YES' | 'NO')
# SYSTEM_VIEW_COLUMN_USAGE
SYSTEM_VIEW_COLUMN_USAGE_VIEW_CATALOG=view catalog name
SYSTEM_VIEW_COLUMN_USAGE_VIEW_SCHEMA=view schema name
SYSTEM_VIEW_COLUMN_USAGE_VIEW_NAME=view identifier
SYSTEM_VIEW_COLUMN_USAGE_TABLE_CATALOG=table catalog name
SYSTEM_VIEW_COLUMN_USAGE_TABLE_SCHEMA=table schema name
SYSTEM_VIEW_COLUMN_USAGE_TABLE_NAME=table identifier
SYSTEM_VIEW_COLUMN_USAGE_COLUMN_NAME=column of table that is explicitly or implicitly referenced in the <query expression> of the view being described.
# SYSTEM_VIEW_ROUTINE_USAGE
SYSTEM_VIEW_ROUTINE_USAGE_TABLE_CATALOG=view catalog name
SYSTEM_VIEW_ROUTINE_USAGE_TABLE_SCHEMA=view schema name
SYSTEM_VIEW_ROUTINE_USAGE_TABLE_NAME=view identifier
SYSTEM_VIEW_ROUTINE_USAGE_SPECIFIC_CATALOG=catalog name of specific name of routine
SYSTEM_VIEW_ROUTINE_USAGE_SPECIFIC_SCHEMA=schema name of specific name of routine
SYSTEM_VIEW_ROUTINE_USAGE_SPECIFIC_NAME=specific name of SQL-invoked subject routine of either a <routine invocation>, a <method reference>, a <method invocation>, or a <static method invocation> contained in the <view definition>

SYSTEM_VIEW_TABLE_USAGE_VIEW_CATALOG=view catalog name
SYSTEM_VIEW_TABLE_USAGE_VIEW_SCHEMA=view schema name
SYSTEM_VIEW_TABLE_USAGE_VIEW_NAME=view identifier
SYSTEM_VIEW_TABLE_USAGE_TABLE_CATALOG=table catalog name
SYSTEM_VIEW_TABLE_USAGE_TABLE_SCHEMA=table schema name
SYSTEM_VIEW_TABLE_USAGE_TABLE_NAME=table identified by a <table name> simply contained in a <table reference> that is contained in the <query expression> of the view being described.
# Since 1.8.0
# SYSTEM_AUTHORIZATIONS
SYSTEM_AUTHORIZATIONS_AUTHORIZATION_NAME=a <role name> or <user identifier>
SYSTEM_AUTHORIZATIONS_AUTHORIZATION_TYPE=('USER' | 'ROLE') whether the AUTHORIZATION_NAME is a known <user identifier> or is a <role name> defined by a <role definition>.
# SYSTEM_COLLATIONS
SYSTEM_COLLATIONS_COLLATION_CATALOG=catalog name of the collation being described
SYSTEM_COLLATIONS_COLLATION_SCHEMA=unqualified schema name of the collation being described
SYSTEM_COLLATIONS_COLLATION_NAME=qualified identifier of the collation being described
SYSTEM_COLLATIONS_PAD_ATTRIBUTE=('NO PAD' | 'PAD SPACE') whether the collation being described has the NO PAD or PAD SPACE characteristic
SYSTEM_COLLATIONS_COLLATION_TYPE=NULL (deprecated)
SYSTEM_COLLATIONS_COLLATION_DEFINITION=NULL (deprecated)
SYSTEM_COLLATIONS_COLLATION_DICTIONARY=NULL (deprecated)
SYSTEM_COLLATIONS_CHARACTER_REPERTOIRE_NAME=the name of the charater repertoire to which the collation being described is applicable.
# SYSTEM_ROLE_AUTHORIZATION_DESCRIPTORS
SYSTEM_ROLE_AUTHORIZATION_DESCRIPTORS_ROLE_NAME=the <role name> of some <role granted> by the <grant role statement> or the <role name> of a <role definition>.
SYSTEM_ROLE_AUTHORIZATION_DESCRIPTORS_GRANTEE=an <authorization identifier>, possibly PUBLIC, or <role name> specified as a <grantee> contained in a <grant role statement>, or the <authorization identifier> of the current SQLsession when the <role definition> is executed.
SYSTEM_ROLE_AUTHORIZATION_DESCRIPTORS_GRANTOR=the <authorization identifier> of the user or role who granted the role identified by ROLE_NAME to the user or role identified by the value of GRANTEE.
# SYSTEM_SCHEMATA
SYSTEM_SCHEMATA_CATALOG_NAME=the name of the catalog of the described schema
SYSTEM_SCHEMATA_SCHEMA_NAME=the unqualified schema name of the described schema
SYSTEM_SCHEMATA_SCHEMA_OWNER=the authorization identifier that owns the schema.
SYSTEM_SCHEMATA_DEFAULT_CHARACTER_SET_CATALOG=the catalog name of the default character set for columns and domains in the schema.
SYSTEM_SCHEMATA_DEFAULT_CHARACTER_SET_SCHEMA=the unqualified schema name of the default character set for columns and domains in the schema.
SYSTEM_SCHEMATA_DEFAULT_CHARACTER_SET_NAME=the qualified identifier of the default character set for columns and domains in the schemata.
SYSTEM_SCHEMATA_SQL_PATH=the character representation of the schema's <schema path specification>, or null if it cannot be represented without truncation

