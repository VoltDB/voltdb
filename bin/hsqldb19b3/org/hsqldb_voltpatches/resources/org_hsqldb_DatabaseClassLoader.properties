jarLoad(java.sql.Connection,java.lang.String)=Loads the resources stored in the specified archive into the database specified by the <CODE>conn</CODE> argument. <p> Only entries that pass an acceptance test are actually stored. For instance, entries whose content is Java bytecode are accepted only if the classes they define are not in a java.* package. Similarly, all entries of the jar archive special form "META-INF/*" are rejected. Also, for each loading entry that has a resource with the same name already loaded, the MD5 hash values of the contents are compared; if the hash values are equal, then loading entry is ignored.
jarLoad(java.sql.Connection,java.lang.String)@0=A <CODE>Result</CODE> object describing the result of loading the archive
jarLoad(java.sql.Connection,java.lang.String)@1=conn - A <CODE>Connection</CODE> object identifying the target database
jarLoad(java.sql.Connection,java.lang.String)@2=name - the name of the archive; this may be either a jar protocol URL string or a bare file path
jarUnload(java.sql.Connection,java.lang.String)=Removes the resources in the archive identified by the from <CODE>name</CODE> argument from the database specified by the <CODE>conn</CODE> argument.
jarUnload(java.sql.Connection,java.lang.String)@0=A <CODE>Result</CODE> object describing the result of unloading the archive
jarUnload(java.sql.Connection,java.lang.String)@1=conn - A <CODE>Connection</CODE> object identifying the target database
jarUnload(java.sql.Connection,java.lang.String)@2=name - the name of the archive; this may be either a jar protocol URL string or a bare file path
callMain(java.sql.Connection,java.lang.String,java.lang.String)=Invokes the special <CODE>public static void main(String[] args)</CODE> method of the Java <CODE>Class</CODE> indentified by the <CODE>className</CODE> argument.
callMain(java.sql.Connection,java.lang.String,java.lang.String)@1=conn - A <CODE>Connection</CODE> object identifying the execution context in which to invoke the method
callMain(java.sql.Connection,java.lang.String,java.lang.String)@2=className - the fully qualified name of a Java <CODE>Class</CODE>
callMain(java.sql.Connection,java.lang.String,java.lang.String)@3=args - a comma-separated list of argument strings
