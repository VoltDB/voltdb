# $Id: rb.properties 826 2009-01-17 05:04:52Z unsaved $

# Default Locale String resources for TarGenerator.

# IMPORTANT:  Make sure to use ISO-8859-1 encoding for any extended characters,
# both in this file (actually any .properties file) and all referenced text
# files.

# GENERAL .properties SYNTAX:
#   White space AT END OF LINES IS SIGNIFICANT
#   White space at beginning of lines is not
#   \ at very end of line makes the following line a continuation line (with
#     no implied newline in the value.
#     (Combined with the previous 2 rules, this means that white space before
#     this \ is significant, and whitespace at beginning of continutation lines
#     is not).
#   \n does not work as an escape.  Use unicode \u000a for line breaks instead.

# This file is loaded by RefCapablePropertyResourceBundle, so if any
# property here has no value set, the value MUST be set in a file
# located at targenerator/PROPERTYNAME.text

# These tell RefCapablePropertyResourceBundle to look for text files:
DbBackup.syntax=
TarGenerator.syntax=
TarReader.syntax=
listing.format=

# Traditional inline .properties values:
DbBackup.syntaxerr=Syntax error.  Run the following for help:\u000a    \
    java -cp path/to/hsqldb.jar %{1}
pad.block.write=Padding archive with %{1} zero blocks
cleanup.rmfail=Failed to remove possibly corrupt archive: %{1}
unsupported.entry.present=\u000aArchive contains unsupported entry type(s).\u000a\
    We only support types ' ', '0', 'x' (entry type is shown in first column).
bpr.write=Will write at %{1} blocks-per-record
stream.buffer.report=Buffered %{1} bytes from given InputStream into RAM
write.queue.report=%{1} supplicants queued for writing...
file.missing=Required file is missing:  %{1}
modified.property='modified' DB property is '%{1}'
file.disappeared='%{1}' disappeared after backup started
file.changed='%{1}' changed after backup started
file.appeared='%{1}' appeared after backup started
pif.malformat=Line %{1} of PIF Data is malformatted:\u000a%{2}
pif.malformat.size=PIF Data contains malformatted 'size' value:  %{1}
zero.write=Refusing to write record with zero-length key or value
pif.toobig=Total key + val lengths exceeds our total supported max of %{1}
read.denied=User does not have privileges to read file: %{1}
compression.unknown=Unexpected compression type: %{1}
insufficient.read=Expected to read %{1} bytes, but could only read %{2}
decompression.ranout=Ran out of decompressed bytes after reading %{1} out of %{2}
move.work.file=Is somebody else writing to the same file?  \
               If not, remove aborted work file:  %{1}
cant.overwrite=You do not have privileges to overwrite '%{1}'
cant.write.dir=You do not have privileges to write in directory '%{1}'
no.parent.dir=No parent directory '%{1}'
bad.block.write.len=Specified block is %{1} bytes long instead of 512
illegal.block.boundary=Current file length %{1} is not an even 512-byte-block multiple
workfile.delete.fail=Failed to delete work file '%{1}'
unsupported.ext=%{1} only generates files with extensions \
    '.tar', '.tgz.', or '.tar.gz':  %{2}
dest.exists=Destination file already exists: %{1}
parent.not.dir=Parent node of specified file is not a directory: %{1}
cant.write.parent=Parent directory of specified file is not writable: {1}
parent.create.fail=Failed to create parent directory for tar file: %{1}
tar.field.toobig=Input too long for field %{1}:  %{2}
missing.supp.path=Path required if existing component file not specified
nonfile.entry=This method intentionally creates TarEntries only for files
read.lt.1=Does not make sense to make an entry for < 1 byte
data.changed=Seems that the input data changed.  Input data was %{1} bytes, \
             but we wrote %{2} bytes of data
unexpected.header.key=Unexpected Header key: %{1}
tarreader.syntaxerr=Run 'java -cp path/to/hsqldb.jar %{1}' for help
unsupported.mode=Sorry, mode not supported yet: %{1}
dir.x.conflict=The '--directory=' switch only makes sense with 'x' mode
pif.unknown.datasize=PIF Data size unknown
pif.data.toobig=PIF Data exceeds max supported size.  %{1} > %{2}
data.size.unknown=Data size unknown
extraction.exists=Extracted file already exists: %{1}
extraction.exists.notfile=Node already exist but is not a file: %{1}
extraction.parent.not.dir=Parent node of extracted path is not a directory: %{1}
extraction.parent.not.writable=Parent directory of extracted path is not \
                               writable: %{1}
extraction.parent.mkfail=Failed to create parent directory for extracted \
                         file: %{1}
write.count.mismatch=Attempted to write %{1} bytes to '%{2}', but only wrote %{3}
header.field.missing=Required field '%{1}' missing in tar entry header.
checksum.mismatch=Corrupted tar entry header.  Expected checksum %{1}, \
                  but calculated %{2}
create.only.normal=At this time, we only support creation of normal files \
                   from Tar entries
bad.header.value=Bad value in header for field %{1}
bad.numeric.header.value=Bad value in header for field %{1}: %{2}.\u000a\
    Header field could use 'binary number extension', which we don't \
    support.\u000aUse Pax Interchange Format instead for huge files.
